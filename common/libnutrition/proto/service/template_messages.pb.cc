// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "libnutrition/proto/service/template_messages.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* TemplateLoadRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TemplateLoadRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* TemplateLoadResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TemplateLoadResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* TemplateStoreRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TemplateStoreRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* TemplateStoreResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TemplateStoreResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* TemplateDeleteRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TemplateDeleteRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* TemplateDeleteResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TemplateDeleteResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_libnutrition_2fproto_2fservice_2ftemplate_5fmessages_2eproto() {
  protobuf_AddDesc_libnutrition_2fproto_2fservice_2ftemplate_5fmessages_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "libnutrition/proto/service/template_messages.proto");
  GOOGLE_CHECK(file != NULL);
  TemplateLoadRequest_descriptor_ = file->message_type(0);
  static const int TemplateLoadRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TemplateLoadRequest, omit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TemplateLoadRequest, nameandidonly_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TemplateLoadRequest, requestedids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TemplateLoadRequest, requesteduserids_),
  };
  TemplateLoadRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TemplateLoadRequest_descriptor_,
      TemplateLoadRequest::default_instance_,
      TemplateLoadRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TemplateLoadRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TemplateLoadRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TemplateLoadRequest));
  TemplateLoadResponse_descriptor_ = file->message_type(1);
  static const int TemplateLoadResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TemplateLoadResponse, templates_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TemplateLoadResponse, error_),
  };
  TemplateLoadResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TemplateLoadResponse_descriptor_,
      TemplateLoadResponse::default_instance_,
      TemplateLoadResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TemplateLoadResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TemplateLoadResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TemplateLoadResponse));
  TemplateStoreRequest_descriptor_ = file->message_type(2);
  static const int TemplateStoreRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TemplateStoreRequest, templatess_),
  };
  TemplateStoreRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TemplateStoreRequest_descriptor_,
      TemplateStoreRequest::default_instance_,
      TemplateStoreRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TemplateStoreRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TemplateStoreRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TemplateStoreRequest));
  TemplateStoreResponse_descriptor_ = file->message_type(3);
  static const int TemplateStoreResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TemplateStoreResponse, storedids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TemplateStoreResponse, error_),
  };
  TemplateStoreResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TemplateStoreResponse_descriptor_,
      TemplateStoreResponse::default_instance_,
      TemplateStoreResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TemplateStoreResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TemplateStoreResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TemplateStoreResponse));
  TemplateDeleteRequest_descriptor_ = file->message_type(4);
  static const int TemplateDeleteRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TemplateDeleteRequest, deleteids_),
  };
  TemplateDeleteRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TemplateDeleteRequest_descriptor_,
      TemplateDeleteRequest::default_instance_,
      TemplateDeleteRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TemplateDeleteRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TemplateDeleteRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TemplateDeleteRequest));
  TemplateDeleteResponse_descriptor_ = file->message_type(5);
  static const int TemplateDeleteResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TemplateDeleteResponse, deletedids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TemplateDeleteResponse, error_),
  };
  TemplateDeleteResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TemplateDeleteResponse_descriptor_,
      TemplateDeleteResponse::default_instance_,
      TemplateDeleteResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TemplateDeleteResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TemplateDeleteResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TemplateDeleteResponse));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_libnutrition_2fproto_2fservice_2ftemplate_5fmessages_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TemplateLoadRequest_descriptor_, &TemplateLoadRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TemplateLoadResponse_descriptor_, &TemplateLoadResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TemplateStoreRequest_descriptor_, &TemplateStoreRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TemplateStoreResponse_descriptor_, &TemplateStoreResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TemplateDeleteRequest_descriptor_, &TemplateDeleteRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TemplateDeleteResponse_descriptor_, &TemplateDeleteResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_libnutrition_2fproto_2fservice_2ftemplate_5fmessages_2eproto() {
  delete TemplateLoadRequest::default_instance_;
  delete TemplateLoadRequest_reflection_;
  delete TemplateLoadResponse::default_instance_;
  delete TemplateLoadResponse_reflection_;
  delete TemplateStoreRequest::default_instance_;
  delete TemplateStoreRequest_reflection_;
  delete TemplateStoreResponse::default_instance_;
  delete TemplateStoreResponse_reflection_;
  delete TemplateDeleteRequest::default_instance_;
  delete TemplateDeleteRequest_reflection_;
  delete TemplateDeleteResponse::default_instance_;
  delete TemplateDeleteResponse_reflection_;
}

void protobuf_AddDesc_libnutrition_2fproto_2fservice_2ftemplate_5fmessages_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_libnutrition_2fproto_2fdata_2ftemplate_2eproto();
  ::protobuf_AddDesc_libnutrition_2fproto_2fservice_2ferror_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n2libnutrition/proto/service/template_me"
    "ssages.proto\032&libnutrition/proto/data/te"
    "mplate.proto\032&libnutrition/proto/service"
    "/error.proto\"x\n\023TemplateLoadRequest\022\023\n\004o"
    "mit\030\001 \001(\010:\005false\022\034\n\rnameAndIdOnly\030\002 \001(\010:"
    "\005false\022\024\n\014requestedIds\030\003 \003(\005\022\030\n\020requeste"
    "dUserIds\030\004 \003(\005\"O\n\024TemplateLoadResponse\022 "
    "\n\ttemplates\030\001 \003(\0132\r.TemplateData\022\025\n\005erro"
    "r\030d \001(\0132\006.Error\"9\n\024TemplateStoreRequest\022"
    "!\n\ntemplatess\030\001 \003(\0132\r.TemplateData\"A\n\025Te"
    "mplateStoreResponse\022\021\n\tstoredIds\030\001 \003(\005\022\025"
    "\n\005error\030d \001(\0132\006.Error\"*\n\025TemplateDeleteR"
    "equest\022\021\n\tdeleteIds\030\001 \003(\005\"C\n\026TemplateDel"
    "eteResponse\022\022\n\ndeletedIds\030\001 \003(\005\022\025\n\005error"
    "\030d \001(\0132\006.Error", 574);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "libnutrition/proto/service/template_messages.proto", &protobuf_RegisterTypes);
  TemplateLoadRequest::default_instance_ = new TemplateLoadRequest();
  TemplateLoadResponse::default_instance_ = new TemplateLoadResponse();
  TemplateStoreRequest::default_instance_ = new TemplateStoreRequest();
  TemplateStoreResponse::default_instance_ = new TemplateStoreResponse();
  TemplateDeleteRequest::default_instance_ = new TemplateDeleteRequest();
  TemplateDeleteResponse::default_instance_ = new TemplateDeleteResponse();
  TemplateLoadRequest::default_instance_->InitAsDefaultInstance();
  TemplateLoadResponse::default_instance_->InitAsDefaultInstance();
  TemplateStoreRequest::default_instance_->InitAsDefaultInstance();
  TemplateStoreResponse::default_instance_->InitAsDefaultInstance();
  TemplateDeleteRequest::default_instance_->InitAsDefaultInstance();
  TemplateDeleteResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_libnutrition_2fproto_2fservice_2ftemplate_5fmessages_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_libnutrition_2fproto_2fservice_2ftemplate_5fmessages_2eproto {
  StaticDescriptorInitializer_libnutrition_2fproto_2fservice_2ftemplate_5fmessages_2eproto() {
    protobuf_AddDesc_libnutrition_2fproto_2fservice_2ftemplate_5fmessages_2eproto();
  }
} static_descriptor_initializer_libnutrition_2fproto_2fservice_2ftemplate_5fmessages_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int TemplateLoadRequest::kOmitFieldNumber;
const int TemplateLoadRequest::kNameAndIdOnlyFieldNumber;
const int TemplateLoadRequest::kRequestedIdsFieldNumber;
const int TemplateLoadRequest::kRequestedUserIdsFieldNumber;
#endif  // !_MSC_VER

TemplateLoadRequest::TemplateLoadRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TemplateLoadRequest::InitAsDefaultInstance() {
}

TemplateLoadRequest::TemplateLoadRequest(const TemplateLoadRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TemplateLoadRequest::SharedCtor() {
  _cached_size_ = 0;
  omit_ = false;
  nameandidonly_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TemplateLoadRequest::~TemplateLoadRequest() {
  SharedDtor();
}

void TemplateLoadRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TemplateLoadRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TemplateLoadRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TemplateLoadRequest_descriptor_;
}

const TemplateLoadRequest& TemplateLoadRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_libnutrition_2fproto_2fservice_2ftemplate_5fmessages_2eproto();  return *default_instance_;
}

TemplateLoadRequest* TemplateLoadRequest::default_instance_ = NULL;

TemplateLoadRequest* TemplateLoadRequest::New() const {
  return new TemplateLoadRequest;
}

void TemplateLoadRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    omit_ = false;
    nameandidonly_ = false;
  }
  requestedids_.Clear();
  requesteduserids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TemplateLoadRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool omit = 1 [default = false];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &omit_)));
          _set_bit(0);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_nameAndIdOnly;
        break;
      }
      
      // optional bool nameAndIdOnly = 2 [default = false];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nameAndIdOnly:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &nameandidonly_)));
          _set_bit(1);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_requestedIds;
        break;
      }
      
      // repeated int32 requestedIds = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_requestedIds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_requestedids())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_requestedids())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_requestedIds;
        if (input->ExpectTag(32)) goto parse_requestedUserIds;
        break;
      }
      
      // repeated int32 requestedUserIds = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_requestedUserIds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_requesteduserids())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_requesteduserids())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_requestedUserIds;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TemplateLoadRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional bool omit = 1 [default = false];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->omit(), output);
  }
  
  // optional bool nameAndIdOnly = 2 [default = false];
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->nameandidonly(), output);
  }
  
  // repeated int32 requestedIds = 3;
  for (int i = 0; i < this->requestedids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->requestedids(i), output);
  }
  
  // repeated int32 requestedUserIds = 4;
  for (int i = 0; i < this->requesteduserids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->requesteduserids(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TemplateLoadRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional bool omit = 1 [default = false];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->omit(), target);
  }
  
  // optional bool nameAndIdOnly = 2 [default = false];
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->nameandidonly(), target);
  }
  
  // repeated int32 requestedIds = 3;
  for (int i = 0; i < this->requestedids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->requestedids(i), target);
  }
  
  // repeated int32 requestedUserIds = 4;
  for (int i = 0; i < this->requesteduserids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->requesteduserids(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TemplateLoadRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool omit = 1 [default = false];
    if (has_omit()) {
      total_size += 1 + 1;
    }
    
    // optional bool nameAndIdOnly = 2 [default = false];
    if (has_nameandidonly()) {
      total_size += 1 + 1;
    }
    
  }
  // repeated int32 requestedIds = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->requestedids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->requestedids(i));
    }
    total_size += 1 * this->requestedids_size() + data_size;
  }
  
  // repeated int32 requestedUserIds = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->requesteduserids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->requesteduserids(i));
    }
    total_size += 1 * this->requesteduserids_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TemplateLoadRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TemplateLoadRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TemplateLoadRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TemplateLoadRequest::MergeFrom(const TemplateLoadRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  requestedids_.MergeFrom(from.requestedids_);
  requesteduserids_.MergeFrom(from.requesteduserids_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_omit(from.omit());
    }
    if (from._has_bit(1)) {
      set_nameandidonly(from.nameandidonly());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TemplateLoadRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TemplateLoadRequest::CopyFrom(const TemplateLoadRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TemplateLoadRequest::IsInitialized() const {
  
  return true;
}

void TemplateLoadRequest::Swap(TemplateLoadRequest* other) {
  if (other != this) {
    std::swap(omit_, other->omit_);
    std::swap(nameandidonly_, other->nameandidonly_);
    requestedids_.Swap(&other->requestedids_);
    requesteduserids_.Swap(&other->requesteduserids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TemplateLoadRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TemplateLoadRequest_descriptor_;
  metadata.reflection = TemplateLoadRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TemplateLoadResponse::kTemplatesFieldNumber;
const int TemplateLoadResponse::kErrorFieldNumber;
#endif  // !_MSC_VER

TemplateLoadResponse::TemplateLoadResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TemplateLoadResponse::InitAsDefaultInstance() {
  error_ = const_cast< ::Error*>(&::Error::default_instance());
}

TemplateLoadResponse::TemplateLoadResponse(const TemplateLoadResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TemplateLoadResponse::SharedCtor() {
  _cached_size_ = 0;
  error_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TemplateLoadResponse::~TemplateLoadResponse() {
  SharedDtor();
}

void TemplateLoadResponse::SharedDtor() {
  if (this != default_instance_) {
    delete error_;
  }
}

void TemplateLoadResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TemplateLoadResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TemplateLoadResponse_descriptor_;
}

const TemplateLoadResponse& TemplateLoadResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_libnutrition_2fproto_2fservice_2ftemplate_5fmessages_2eproto();  return *default_instance_;
}

TemplateLoadResponse* TemplateLoadResponse::default_instance_ = NULL;

TemplateLoadResponse* TemplateLoadResponse::New() const {
  return new TemplateLoadResponse;
}

void TemplateLoadResponse::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (_has_bit(1)) {
      if (error_ != NULL) error_->::Error::Clear();
    }
  }
  templates_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TemplateLoadResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .TemplateData templates = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_templates:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_templates()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_templates;
        if (input->ExpectTag(802)) goto parse_error;
        break;
      }
      
      // optional .Error error = 100;
      case 100: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TemplateLoadResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .TemplateData templates = 1;
  for (int i = 0; i < this->templates_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->templates(i), output);
  }
  
  // optional .Error error = 100;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100, this->error(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TemplateLoadResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .TemplateData templates = 1;
  for (int i = 0; i < this->templates_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->templates(i), target);
  }
  
  // optional .Error error = 100;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        100, this->error(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TemplateLoadResponse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .Error error = 100;
    if (has_error()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->error());
    }
    
  }
  // repeated .TemplateData templates = 1;
  total_size += 1 * this->templates_size();
  for (int i = 0; i < this->templates_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->templates(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TemplateLoadResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TemplateLoadResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TemplateLoadResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TemplateLoadResponse::MergeFrom(const TemplateLoadResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  templates_.MergeFrom(from.templates_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from._has_bit(1)) {
      mutable_error()->::Error::MergeFrom(from.error());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TemplateLoadResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TemplateLoadResponse::CopyFrom(const TemplateLoadResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TemplateLoadResponse::IsInitialized() const {
  
  return true;
}

void TemplateLoadResponse::Swap(TemplateLoadResponse* other) {
  if (other != this) {
    templates_.Swap(&other->templates_);
    std::swap(error_, other->error_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TemplateLoadResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TemplateLoadResponse_descriptor_;
  metadata.reflection = TemplateLoadResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TemplateStoreRequest::kTemplatessFieldNumber;
#endif  // !_MSC_VER

TemplateStoreRequest::TemplateStoreRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TemplateStoreRequest::InitAsDefaultInstance() {
}

TemplateStoreRequest::TemplateStoreRequest(const TemplateStoreRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TemplateStoreRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TemplateStoreRequest::~TemplateStoreRequest() {
  SharedDtor();
}

void TemplateStoreRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TemplateStoreRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TemplateStoreRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TemplateStoreRequest_descriptor_;
}

const TemplateStoreRequest& TemplateStoreRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_libnutrition_2fproto_2fservice_2ftemplate_5fmessages_2eproto();  return *default_instance_;
}

TemplateStoreRequest* TemplateStoreRequest::default_instance_ = NULL;

TemplateStoreRequest* TemplateStoreRequest::New() const {
  return new TemplateStoreRequest;
}

void TemplateStoreRequest::Clear() {
  templatess_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TemplateStoreRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .TemplateData templatess = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_templatess:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_templatess()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_templatess;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TemplateStoreRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .TemplateData templatess = 1;
  for (int i = 0; i < this->templatess_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->templatess(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TemplateStoreRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .TemplateData templatess = 1;
  for (int i = 0; i < this->templatess_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->templatess(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TemplateStoreRequest::ByteSize() const {
  int total_size = 0;
  
  // repeated .TemplateData templatess = 1;
  total_size += 1 * this->templatess_size();
  for (int i = 0; i < this->templatess_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->templatess(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TemplateStoreRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TemplateStoreRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TemplateStoreRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TemplateStoreRequest::MergeFrom(const TemplateStoreRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  templatess_.MergeFrom(from.templatess_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TemplateStoreRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TemplateStoreRequest::CopyFrom(const TemplateStoreRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TemplateStoreRequest::IsInitialized() const {
  
  return true;
}

void TemplateStoreRequest::Swap(TemplateStoreRequest* other) {
  if (other != this) {
    templatess_.Swap(&other->templatess_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TemplateStoreRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TemplateStoreRequest_descriptor_;
  metadata.reflection = TemplateStoreRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TemplateStoreResponse::kStoredIdsFieldNumber;
const int TemplateStoreResponse::kErrorFieldNumber;
#endif  // !_MSC_VER

TemplateStoreResponse::TemplateStoreResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TemplateStoreResponse::InitAsDefaultInstance() {
  error_ = const_cast< ::Error*>(&::Error::default_instance());
}

TemplateStoreResponse::TemplateStoreResponse(const TemplateStoreResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TemplateStoreResponse::SharedCtor() {
  _cached_size_ = 0;
  error_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TemplateStoreResponse::~TemplateStoreResponse() {
  SharedDtor();
}

void TemplateStoreResponse::SharedDtor() {
  if (this != default_instance_) {
    delete error_;
  }
}

void TemplateStoreResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TemplateStoreResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TemplateStoreResponse_descriptor_;
}

const TemplateStoreResponse& TemplateStoreResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_libnutrition_2fproto_2fservice_2ftemplate_5fmessages_2eproto();  return *default_instance_;
}

TemplateStoreResponse* TemplateStoreResponse::default_instance_ = NULL;

TemplateStoreResponse* TemplateStoreResponse::New() const {
  return new TemplateStoreResponse;
}

void TemplateStoreResponse::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (_has_bit(1)) {
      if (error_ != NULL) error_->::Error::Clear();
    }
  }
  storedids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TemplateStoreResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 storedIds = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_storedIds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_storedids())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_storedids())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_storedIds;
        if (input->ExpectTag(802)) goto parse_error;
        break;
      }
      
      // optional .Error error = 100;
      case 100: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TemplateStoreResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 storedIds = 1;
  for (int i = 0; i < this->storedids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->storedids(i), output);
  }
  
  // optional .Error error = 100;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100, this->error(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TemplateStoreResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 storedIds = 1;
  for (int i = 0; i < this->storedids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->storedids(i), target);
  }
  
  // optional .Error error = 100;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        100, this->error(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TemplateStoreResponse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .Error error = 100;
    if (has_error()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->error());
    }
    
  }
  // repeated int32 storedIds = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->storedids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->storedids(i));
    }
    total_size += 1 * this->storedids_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TemplateStoreResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TemplateStoreResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TemplateStoreResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TemplateStoreResponse::MergeFrom(const TemplateStoreResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  storedids_.MergeFrom(from.storedids_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from._has_bit(1)) {
      mutable_error()->::Error::MergeFrom(from.error());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TemplateStoreResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TemplateStoreResponse::CopyFrom(const TemplateStoreResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TemplateStoreResponse::IsInitialized() const {
  
  return true;
}

void TemplateStoreResponse::Swap(TemplateStoreResponse* other) {
  if (other != this) {
    storedids_.Swap(&other->storedids_);
    std::swap(error_, other->error_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TemplateStoreResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TemplateStoreResponse_descriptor_;
  metadata.reflection = TemplateStoreResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TemplateDeleteRequest::kDeleteIdsFieldNumber;
#endif  // !_MSC_VER

TemplateDeleteRequest::TemplateDeleteRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TemplateDeleteRequest::InitAsDefaultInstance() {
}

TemplateDeleteRequest::TemplateDeleteRequest(const TemplateDeleteRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TemplateDeleteRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TemplateDeleteRequest::~TemplateDeleteRequest() {
  SharedDtor();
}

void TemplateDeleteRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TemplateDeleteRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TemplateDeleteRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TemplateDeleteRequest_descriptor_;
}

const TemplateDeleteRequest& TemplateDeleteRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_libnutrition_2fproto_2fservice_2ftemplate_5fmessages_2eproto();  return *default_instance_;
}

TemplateDeleteRequest* TemplateDeleteRequest::default_instance_ = NULL;

TemplateDeleteRequest* TemplateDeleteRequest::New() const {
  return new TemplateDeleteRequest;
}

void TemplateDeleteRequest::Clear() {
  deleteids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TemplateDeleteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 deleteIds = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_deleteIds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_deleteids())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_deleteids())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_deleteIds;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TemplateDeleteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 deleteIds = 1;
  for (int i = 0; i < this->deleteids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->deleteids(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TemplateDeleteRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 deleteIds = 1;
  for (int i = 0; i < this->deleteids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->deleteids(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TemplateDeleteRequest::ByteSize() const {
  int total_size = 0;
  
  // repeated int32 deleteIds = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->deleteids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->deleteids(i));
    }
    total_size += 1 * this->deleteids_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TemplateDeleteRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TemplateDeleteRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TemplateDeleteRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TemplateDeleteRequest::MergeFrom(const TemplateDeleteRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  deleteids_.MergeFrom(from.deleteids_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TemplateDeleteRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TemplateDeleteRequest::CopyFrom(const TemplateDeleteRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TemplateDeleteRequest::IsInitialized() const {
  
  return true;
}

void TemplateDeleteRequest::Swap(TemplateDeleteRequest* other) {
  if (other != this) {
    deleteids_.Swap(&other->deleteids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TemplateDeleteRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TemplateDeleteRequest_descriptor_;
  metadata.reflection = TemplateDeleteRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TemplateDeleteResponse::kDeletedIdsFieldNumber;
const int TemplateDeleteResponse::kErrorFieldNumber;
#endif  // !_MSC_VER

TemplateDeleteResponse::TemplateDeleteResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TemplateDeleteResponse::InitAsDefaultInstance() {
  error_ = const_cast< ::Error*>(&::Error::default_instance());
}

TemplateDeleteResponse::TemplateDeleteResponse(const TemplateDeleteResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TemplateDeleteResponse::SharedCtor() {
  _cached_size_ = 0;
  error_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TemplateDeleteResponse::~TemplateDeleteResponse() {
  SharedDtor();
}

void TemplateDeleteResponse::SharedDtor() {
  if (this != default_instance_) {
    delete error_;
  }
}

void TemplateDeleteResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TemplateDeleteResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TemplateDeleteResponse_descriptor_;
}

const TemplateDeleteResponse& TemplateDeleteResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_libnutrition_2fproto_2fservice_2ftemplate_5fmessages_2eproto();  return *default_instance_;
}

TemplateDeleteResponse* TemplateDeleteResponse::default_instance_ = NULL;

TemplateDeleteResponse* TemplateDeleteResponse::New() const {
  return new TemplateDeleteResponse;
}

void TemplateDeleteResponse::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (_has_bit(1)) {
      if (error_ != NULL) error_->::Error::Clear();
    }
  }
  deletedids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TemplateDeleteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 deletedIds = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_deletedIds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_deletedids())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_deletedids())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_deletedIds;
        if (input->ExpectTag(802)) goto parse_error;
        break;
      }
      
      // optional .Error error = 100;
      case 100: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TemplateDeleteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 deletedIds = 1;
  for (int i = 0; i < this->deletedids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->deletedids(i), output);
  }
  
  // optional .Error error = 100;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100, this->error(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TemplateDeleteResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 deletedIds = 1;
  for (int i = 0; i < this->deletedids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->deletedids(i), target);
  }
  
  // optional .Error error = 100;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        100, this->error(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TemplateDeleteResponse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .Error error = 100;
    if (has_error()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->error());
    }
    
  }
  // repeated int32 deletedIds = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->deletedids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->deletedids(i));
    }
    total_size += 1 * this->deletedids_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TemplateDeleteResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TemplateDeleteResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TemplateDeleteResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TemplateDeleteResponse::MergeFrom(const TemplateDeleteResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  deletedids_.MergeFrom(from.deletedids_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from._has_bit(1)) {
      mutable_error()->::Error::MergeFrom(from.error());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TemplateDeleteResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TemplateDeleteResponse::CopyFrom(const TemplateDeleteResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TemplateDeleteResponse::IsInitialized() const {
  
  return true;
}

void TemplateDeleteResponse::Swap(TemplateDeleteResponse* other) {
  if (other != this) {
    deletedids_.Swap(&other->deletedids_);
    std::swap(error_, other->error_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TemplateDeleteResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TemplateDeleteResponse_descriptor_;
  metadata.reflection = TemplateDeleteResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
