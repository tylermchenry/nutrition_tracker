// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: libnutrition/proto/service/single_food_messages.proto

#ifndef PROTOBUF_libnutrition_2fproto_2fservice_2fsingle_5ffood_5fmessages_2eproto__INCLUDED
#define PROTOBUF_libnutrition_2fproto_2fservice_2fsingle_5ffood_5fmessages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "libnutrition/proto/data/single_food.pb.h"
#include "libnutrition/proto/service/error.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_libnutrition_2fproto_2fservice_2fsingle_5ffood_5fmessages_2eproto();
void protobuf_AssignDesc_libnutrition_2fproto_2fservice_2fsingle_5ffood_5fmessages_2eproto();
void protobuf_ShutdownFile_libnutrition_2fproto_2fservice_2fsingle_5ffood_5fmessages_2eproto();

class SingleFoodLoadRequest;
class SingleFoodLoadResponse;
class SingleFoodStoreRequest;
class SingleFoodStoreResponse;
class SingleFoodDeleteRequest;
class SingleFoodDeleteResponse;

// ===================================================================

class SingleFoodLoadRequest : public ::google::protobuf::Message {
 public:
  SingleFoodLoadRequest();
  virtual ~SingleFoodLoadRequest();
  
  SingleFoodLoadRequest(const SingleFoodLoadRequest& from);
  
  inline SingleFoodLoadRequest& operator=(const SingleFoodLoadRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SingleFoodLoadRequest& default_instance();
  
  void Swap(SingleFoodLoadRequest* other);
  
  // implements Message ----------------------------------------------
  
  SingleFoodLoadRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SingleFoodLoadRequest& from);
  void MergeFrom(const SingleFoodLoadRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool omit = 1 [default = false];
  inline bool has_omit() const;
  inline void clear_omit();
  static const int kOmitFieldNumber = 1;
  inline bool omit() const;
  inline void set_omit(bool value);
  
  // optional bool nameAndIdOnly = 2 [default = false];
  inline bool has_nameandidonly() const;
  inline void clear_nameandidonly();
  static const int kNameAndIdOnlyFieldNumber = 2;
  inline bool nameandidonly() const;
  inline void set_nameandidonly(bool value);
  
  // repeated int32 requestedIds = 3;
  inline int requestedids_size() const;
  inline void clear_requestedids();
  static const int kRequestedIdsFieldNumber = 3;
  inline ::google::protobuf::int32 requestedids(int index) const;
  inline void set_requestedids(int index, ::google::protobuf::int32 value);
  inline void add_requestedids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      requestedids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_requestedids();
  
  // repeated int32 requestedUserIds = 4;
  inline int requesteduserids_size() const;
  inline void clear_requesteduserids();
  static const int kRequestedUserIdsFieldNumber = 4;
  inline ::google::protobuf::int32 requesteduserids(int index) const;
  inline void set_requesteduserids(int index, ::google::protobuf::int32 value);
  inline void add_requesteduserids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      requesteduserids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_requesteduserids();
  
  // @@protoc_insertion_point(class_scope:SingleFoodLoadRequest)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  bool omit_;
  bool nameandidonly_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > requestedids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > requesteduserids_;
  friend void  protobuf_AddDesc_libnutrition_2fproto_2fservice_2fsingle_5ffood_5fmessages_2eproto();
  friend void protobuf_AssignDesc_libnutrition_2fproto_2fservice_2fsingle_5ffood_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_libnutrition_2fproto_2fservice_2fsingle_5ffood_5fmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SingleFoodLoadRequest* default_instance_;
};
// -------------------------------------------------------------------

class SingleFoodLoadResponse : public ::google::protobuf::Message {
 public:
  SingleFoodLoadResponse();
  virtual ~SingleFoodLoadResponse();
  
  SingleFoodLoadResponse(const SingleFoodLoadResponse& from);
  
  inline SingleFoodLoadResponse& operator=(const SingleFoodLoadResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SingleFoodLoadResponse& default_instance();
  
  void Swap(SingleFoodLoadResponse* other);
  
  // implements Message ----------------------------------------------
  
  SingleFoodLoadResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SingleFoodLoadResponse& from);
  void MergeFrom(const SingleFoodLoadResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .SingleFoodData singleFoods = 1;
  inline int singlefoods_size() const;
  inline void clear_singlefoods();
  static const int kSingleFoodsFieldNumber = 1;
  inline const ::SingleFoodData& singlefoods(int index) const;
  inline ::SingleFoodData* mutable_singlefoods(int index);
  inline ::SingleFoodData* add_singlefoods();
  inline const ::google::protobuf::RepeatedPtrField< ::SingleFoodData >&
      singlefoods() const;
  inline ::google::protobuf::RepeatedPtrField< ::SingleFoodData >*
      mutable_singlefoods();
  
  // optional .Error error = 100;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 100;
  inline const ::Error& error() const;
  inline ::Error* mutable_error();
  
  // @@protoc_insertion_point(class_scope:SingleFoodLoadResponse)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::SingleFoodData > singlefoods_;
  ::Error* error_;
  friend void  protobuf_AddDesc_libnutrition_2fproto_2fservice_2fsingle_5ffood_5fmessages_2eproto();
  friend void protobuf_AssignDesc_libnutrition_2fproto_2fservice_2fsingle_5ffood_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_libnutrition_2fproto_2fservice_2fsingle_5ffood_5fmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SingleFoodLoadResponse* default_instance_;
};
// -------------------------------------------------------------------

class SingleFoodStoreRequest : public ::google::protobuf::Message {
 public:
  SingleFoodStoreRequest();
  virtual ~SingleFoodStoreRequest();
  
  SingleFoodStoreRequest(const SingleFoodStoreRequest& from);
  
  inline SingleFoodStoreRequest& operator=(const SingleFoodStoreRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SingleFoodStoreRequest& default_instance();
  
  void Swap(SingleFoodStoreRequest* other);
  
  // implements Message ----------------------------------------------
  
  SingleFoodStoreRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SingleFoodStoreRequest& from);
  void MergeFrom(const SingleFoodStoreRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .SingleFoodData singleFoods = 1;
  inline int singlefoods_size() const;
  inline void clear_singlefoods();
  static const int kSingleFoodsFieldNumber = 1;
  inline const ::SingleFoodData& singlefoods(int index) const;
  inline ::SingleFoodData* mutable_singlefoods(int index);
  inline ::SingleFoodData* add_singlefoods();
  inline const ::google::protobuf::RepeatedPtrField< ::SingleFoodData >&
      singlefoods() const;
  inline ::google::protobuf::RepeatedPtrField< ::SingleFoodData >*
      mutable_singlefoods();
  
  // @@protoc_insertion_point(class_scope:SingleFoodStoreRequest)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::SingleFoodData > singlefoods_;
  friend void  protobuf_AddDesc_libnutrition_2fproto_2fservice_2fsingle_5ffood_5fmessages_2eproto();
  friend void protobuf_AssignDesc_libnutrition_2fproto_2fservice_2fsingle_5ffood_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_libnutrition_2fproto_2fservice_2fsingle_5ffood_5fmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SingleFoodStoreRequest* default_instance_;
};
// -------------------------------------------------------------------

class SingleFoodStoreResponse : public ::google::protobuf::Message {
 public:
  SingleFoodStoreResponse();
  virtual ~SingleFoodStoreResponse();
  
  SingleFoodStoreResponse(const SingleFoodStoreResponse& from);
  
  inline SingleFoodStoreResponse& operator=(const SingleFoodStoreResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SingleFoodStoreResponse& default_instance();
  
  void Swap(SingleFoodStoreResponse* other);
  
  // implements Message ----------------------------------------------
  
  SingleFoodStoreResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SingleFoodStoreResponse& from);
  void MergeFrom(const SingleFoodStoreResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated int32 storedIds = 1;
  inline int storedids_size() const;
  inline void clear_storedids();
  static const int kStoredIdsFieldNumber = 1;
  inline ::google::protobuf::int32 storedids(int index) const;
  inline void set_storedids(int index, ::google::protobuf::int32 value);
  inline void add_storedids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      storedids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_storedids();
  
  // optional .Error error = 100;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 100;
  inline const ::Error& error() const;
  inline ::Error* mutable_error();
  
  // @@protoc_insertion_point(class_scope:SingleFoodStoreResponse)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > storedids_;
  ::Error* error_;
  friend void  protobuf_AddDesc_libnutrition_2fproto_2fservice_2fsingle_5ffood_5fmessages_2eproto();
  friend void protobuf_AssignDesc_libnutrition_2fproto_2fservice_2fsingle_5ffood_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_libnutrition_2fproto_2fservice_2fsingle_5ffood_5fmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SingleFoodStoreResponse* default_instance_;
};
// -------------------------------------------------------------------

class SingleFoodDeleteRequest : public ::google::protobuf::Message {
 public:
  SingleFoodDeleteRequest();
  virtual ~SingleFoodDeleteRequest();
  
  SingleFoodDeleteRequest(const SingleFoodDeleteRequest& from);
  
  inline SingleFoodDeleteRequest& operator=(const SingleFoodDeleteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SingleFoodDeleteRequest& default_instance();
  
  void Swap(SingleFoodDeleteRequest* other);
  
  // implements Message ----------------------------------------------
  
  SingleFoodDeleteRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SingleFoodDeleteRequest& from);
  void MergeFrom(const SingleFoodDeleteRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated int32 deleteIds = 1;
  inline int deleteids_size() const;
  inline void clear_deleteids();
  static const int kDeleteIdsFieldNumber = 1;
  inline ::google::protobuf::int32 deleteids(int index) const;
  inline void set_deleteids(int index, ::google::protobuf::int32 value);
  inline void add_deleteids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      deleteids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_deleteids();
  
  // @@protoc_insertion_point(class_scope:SingleFoodDeleteRequest)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > deleteids_;
  friend void  protobuf_AddDesc_libnutrition_2fproto_2fservice_2fsingle_5ffood_5fmessages_2eproto();
  friend void protobuf_AssignDesc_libnutrition_2fproto_2fservice_2fsingle_5ffood_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_libnutrition_2fproto_2fservice_2fsingle_5ffood_5fmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SingleFoodDeleteRequest* default_instance_;
};
// -------------------------------------------------------------------

class SingleFoodDeleteResponse : public ::google::protobuf::Message {
 public:
  SingleFoodDeleteResponse();
  virtual ~SingleFoodDeleteResponse();
  
  SingleFoodDeleteResponse(const SingleFoodDeleteResponse& from);
  
  inline SingleFoodDeleteResponse& operator=(const SingleFoodDeleteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SingleFoodDeleteResponse& default_instance();
  
  void Swap(SingleFoodDeleteResponse* other);
  
  // implements Message ----------------------------------------------
  
  SingleFoodDeleteResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SingleFoodDeleteResponse& from);
  void MergeFrom(const SingleFoodDeleteResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated int32 deletedIds = 1;
  inline int deletedids_size() const;
  inline void clear_deletedids();
  static const int kDeletedIdsFieldNumber = 1;
  inline ::google::protobuf::int32 deletedids(int index) const;
  inline void set_deletedids(int index, ::google::protobuf::int32 value);
  inline void add_deletedids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      deletedids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_deletedids();
  
  // optional .Error error = 100;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 100;
  inline const ::Error& error() const;
  inline ::Error* mutable_error();
  
  // @@protoc_insertion_point(class_scope:SingleFoodDeleteResponse)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > deletedids_;
  ::Error* error_;
  friend void  protobuf_AddDesc_libnutrition_2fproto_2fservice_2fsingle_5ffood_5fmessages_2eproto();
  friend void protobuf_AssignDesc_libnutrition_2fproto_2fservice_2fsingle_5ffood_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_libnutrition_2fproto_2fservice_2fsingle_5ffood_5fmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SingleFoodDeleteResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// SingleFoodLoadRequest

// optional bool omit = 1 [default = false];
inline bool SingleFoodLoadRequest::has_omit() const {
  return _has_bit(0);
}
inline void SingleFoodLoadRequest::clear_omit() {
  omit_ = false;
  _clear_bit(0);
}
inline bool SingleFoodLoadRequest::omit() const {
  return omit_;
}
inline void SingleFoodLoadRequest::set_omit(bool value) {
  _set_bit(0);
  omit_ = value;
}

// optional bool nameAndIdOnly = 2 [default = false];
inline bool SingleFoodLoadRequest::has_nameandidonly() const {
  return _has_bit(1);
}
inline void SingleFoodLoadRequest::clear_nameandidonly() {
  nameandidonly_ = false;
  _clear_bit(1);
}
inline bool SingleFoodLoadRequest::nameandidonly() const {
  return nameandidonly_;
}
inline void SingleFoodLoadRequest::set_nameandidonly(bool value) {
  _set_bit(1);
  nameandidonly_ = value;
}

// repeated int32 requestedIds = 3;
inline int SingleFoodLoadRequest::requestedids_size() const {
  return requestedids_.size();
}
inline void SingleFoodLoadRequest::clear_requestedids() {
  requestedids_.Clear();
}
inline ::google::protobuf::int32 SingleFoodLoadRequest::requestedids(int index) const {
  return requestedids_.Get(index);
}
inline void SingleFoodLoadRequest::set_requestedids(int index, ::google::protobuf::int32 value) {
  requestedids_.Set(index, value);
}
inline void SingleFoodLoadRequest::add_requestedids(::google::protobuf::int32 value) {
  requestedids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SingleFoodLoadRequest::requestedids() const {
  return requestedids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SingleFoodLoadRequest::mutable_requestedids() {
  return &requestedids_;
}

// repeated int32 requestedUserIds = 4;
inline int SingleFoodLoadRequest::requesteduserids_size() const {
  return requesteduserids_.size();
}
inline void SingleFoodLoadRequest::clear_requesteduserids() {
  requesteduserids_.Clear();
}
inline ::google::protobuf::int32 SingleFoodLoadRequest::requesteduserids(int index) const {
  return requesteduserids_.Get(index);
}
inline void SingleFoodLoadRequest::set_requesteduserids(int index, ::google::protobuf::int32 value) {
  requesteduserids_.Set(index, value);
}
inline void SingleFoodLoadRequest::add_requesteduserids(::google::protobuf::int32 value) {
  requesteduserids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SingleFoodLoadRequest::requesteduserids() const {
  return requesteduserids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SingleFoodLoadRequest::mutable_requesteduserids() {
  return &requesteduserids_;
}

// -------------------------------------------------------------------

// SingleFoodLoadResponse

// repeated .SingleFoodData singleFoods = 1;
inline int SingleFoodLoadResponse::singlefoods_size() const {
  return singlefoods_.size();
}
inline void SingleFoodLoadResponse::clear_singlefoods() {
  singlefoods_.Clear();
}
inline const ::SingleFoodData& SingleFoodLoadResponse::singlefoods(int index) const {
  return singlefoods_.Get(index);
}
inline ::SingleFoodData* SingleFoodLoadResponse::mutable_singlefoods(int index) {
  return singlefoods_.Mutable(index);
}
inline ::SingleFoodData* SingleFoodLoadResponse::add_singlefoods() {
  return singlefoods_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SingleFoodData >&
SingleFoodLoadResponse::singlefoods() const {
  return singlefoods_;
}
inline ::google::protobuf::RepeatedPtrField< ::SingleFoodData >*
SingleFoodLoadResponse::mutable_singlefoods() {
  return &singlefoods_;
}

// optional .Error error = 100;
inline bool SingleFoodLoadResponse::has_error() const {
  return _has_bit(1);
}
inline void SingleFoodLoadResponse::clear_error() {
  if (error_ != NULL) error_->::Error::Clear();
  _clear_bit(1);
}
inline const ::Error& SingleFoodLoadResponse::error() const {
  return error_ != NULL ? *error_ : *default_instance_->error_;
}
inline ::Error* SingleFoodLoadResponse::mutable_error() {
  _set_bit(1);
  if (error_ == NULL) error_ = new ::Error;
  return error_;
}

// -------------------------------------------------------------------

// SingleFoodStoreRequest

// repeated .SingleFoodData singleFoods = 1;
inline int SingleFoodStoreRequest::singlefoods_size() const {
  return singlefoods_.size();
}
inline void SingleFoodStoreRequest::clear_singlefoods() {
  singlefoods_.Clear();
}
inline const ::SingleFoodData& SingleFoodStoreRequest::singlefoods(int index) const {
  return singlefoods_.Get(index);
}
inline ::SingleFoodData* SingleFoodStoreRequest::mutable_singlefoods(int index) {
  return singlefoods_.Mutable(index);
}
inline ::SingleFoodData* SingleFoodStoreRequest::add_singlefoods() {
  return singlefoods_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SingleFoodData >&
SingleFoodStoreRequest::singlefoods() const {
  return singlefoods_;
}
inline ::google::protobuf::RepeatedPtrField< ::SingleFoodData >*
SingleFoodStoreRequest::mutable_singlefoods() {
  return &singlefoods_;
}

// -------------------------------------------------------------------

// SingleFoodStoreResponse

// repeated int32 storedIds = 1;
inline int SingleFoodStoreResponse::storedids_size() const {
  return storedids_.size();
}
inline void SingleFoodStoreResponse::clear_storedids() {
  storedids_.Clear();
}
inline ::google::protobuf::int32 SingleFoodStoreResponse::storedids(int index) const {
  return storedids_.Get(index);
}
inline void SingleFoodStoreResponse::set_storedids(int index, ::google::protobuf::int32 value) {
  storedids_.Set(index, value);
}
inline void SingleFoodStoreResponse::add_storedids(::google::protobuf::int32 value) {
  storedids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SingleFoodStoreResponse::storedids() const {
  return storedids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SingleFoodStoreResponse::mutable_storedids() {
  return &storedids_;
}

// optional .Error error = 100;
inline bool SingleFoodStoreResponse::has_error() const {
  return _has_bit(1);
}
inline void SingleFoodStoreResponse::clear_error() {
  if (error_ != NULL) error_->::Error::Clear();
  _clear_bit(1);
}
inline const ::Error& SingleFoodStoreResponse::error() const {
  return error_ != NULL ? *error_ : *default_instance_->error_;
}
inline ::Error* SingleFoodStoreResponse::mutable_error() {
  _set_bit(1);
  if (error_ == NULL) error_ = new ::Error;
  return error_;
}

// -------------------------------------------------------------------

// SingleFoodDeleteRequest

// repeated int32 deleteIds = 1;
inline int SingleFoodDeleteRequest::deleteids_size() const {
  return deleteids_.size();
}
inline void SingleFoodDeleteRequest::clear_deleteids() {
  deleteids_.Clear();
}
inline ::google::protobuf::int32 SingleFoodDeleteRequest::deleteids(int index) const {
  return deleteids_.Get(index);
}
inline void SingleFoodDeleteRequest::set_deleteids(int index, ::google::protobuf::int32 value) {
  deleteids_.Set(index, value);
}
inline void SingleFoodDeleteRequest::add_deleteids(::google::protobuf::int32 value) {
  deleteids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SingleFoodDeleteRequest::deleteids() const {
  return deleteids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SingleFoodDeleteRequest::mutable_deleteids() {
  return &deleteids_;
}

// -------------------------------------------------------------------

// SingleFoodDeleteResponse

// repeated int32 deletedIds = 1;
inline int SingleFoodDeleteResponse::deletedids_size() const {
  return deletedids_.size();
}
inline void SingleFoodDeleteResponse::clear_deletedids() {
  deletedids_.Clear();
}
inline ::google::protobuf::int32 SingleFoodDeleteResponse::deletedids(int index) const {
  return deletedids_.Get(index);
}
inline void SingleFoodDeleteResponse::set_deletedids(int index, ::google::protobuf::int32 value) {
  deletedids_.Set(index, value);
}
inline void SingleFoodDeleteResponse::add_deletedids(::google::protobuf::int32 value) {
  deletedids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SingleFoodDeleteResponse::deletedids() const {
  return deletedids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SingleFoodDeleteResponse::mutable_deletedids() {
  return &deletedids_;
}

// optional .Error error = 100;
inline bool SingleFoodDeleteResponse::has_error() const {
  return _has_bit(1);
}
inline void SingleFoodDeleteResponse::clear_error() {
  if (error_ != NULL) error_->::Error::Clear();
  _clear_bit(1);
}
inline const ::Error& SingleFoodDeleteResponse::error() const {
  return error_ != NULL ? *error_ : *default_instance_->error_;
}
inline ::Error* SingleFoodDeleteResponse::mutable_error() {
  _set_bit(1);
  if (error_ == NULL) error_ = new ::Error;
  return error_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_libnutrition_2fproto_2fservice_2fsingle_5ffood_5fmessages_2eproto__INCLUDED
