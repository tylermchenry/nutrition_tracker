// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "libnutrition/proto/service/specialized_unit_messages.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* SpecializedUnitLoadResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SpecializedUnitLoadResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* SpecializedUnitLoadRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SpecializedUnitLoadRequest_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_libnutrition_2fproto_2fservice_2fspecialized_5funit_5fmessages_2eproto() {
  protobuf_AddDesc_libnutrition_2fproto_2fservice_2fspecialized_5funit_5fmessages_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "libnutrition/proto/service/specialized_unit_messages.proto");
  GOOGLE_CHECK(file != NULL);
  SpecializedUnitLoadResponse_descriptor_ = file->message_type(0);
  static const int SpecializedUnitLoadResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpecializedUnitLoadResponse, specializedunits_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpecializedUnitLoadResponse, error_),
  };
  SpecializedUnitLoadResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SpecializedUnitLoadResponse_descriptor_,
      SpecializedUnitLoadResponse::default_instance_,
      SpecializedUnitLoadResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpecializedUnitLoadResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpecializedUnitLoadResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SpecializedUnitLoadResponse));
  SpecializedUnitLoadRequest_descriptor_ = file->message_type(1);
  static const int SpecializedUnitLoadRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpecializedUnitLoadRequest, omit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpecializedUnitLoadRequest, requestedsinglefoodids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpecializedUnitLoadRequest, requestedids_),
  };
  SpecializedUnitLoadRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SpecializedUnitLoadRequest_descriptor_,
      SpecializedUnitLoadRequest::default_instance_,
      SpecializedUnitLoadRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpecializedUnitLoadRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpecializedUnitLoadRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SpecializedUnitLoadRequest));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_libnutrition_2fproto_2fservice_2fspecialized_5funit_5fmessages_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SpecializedUnitLoadResponse_descriptor_, &SpecializedUnitLoadResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SpecializedUnitLoadRequest_descriptor_, &SpecializedUnitLoadRequest::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_libnutrition_2fproto_2fservice_2fspecialized_5funit_5fmessages_2eproto() {
  delete SpecializedUnitLoadResponse::default_instance_;
  delete SpecializedUnitLoadResponse_reflection_;
  delete SpecializedUnitLoadRequest::default_instance_;
  delete SpecializedUnitLoadRequest_reflection_;
}

void protobuf_AddDesc_libnutrition_2fproto_2fservice_2fspecialized_5funit_5fmessages_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_libnutrition_2fproto_2fdata_2fspecialized_5funit_2eproto();
  ::protobuf_AddDesc_libnutrition_2fproto_2fservice_2ferror_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n:libnutrition/proto/service/specialized"
    "_unit_messages.proto\032.libnutrition/proto"
    "/data/specialized_unit.proto\032&libnutriti"
    "on/proto/service/error.proto\"d\n\033Speciali"
    "zedUnitLoadResponse\022.\n\020specializedUnits\030"
    "\001 \003(\0132\024.SpecializedUnitData\022\025\n\005error\030d \001"
    "(\0132\006.Error\"\203\001\n\032SpecializedUnitLoadReques"
    "t\022\023\n\004omit\030\001 \001(\010:\005false\022\036\n\026requestedSingl"
    "eFoodIds\030\002 \003(\005\0220\n\014requestedIds\030\003 \003(\0132\032.S"
    "pecializedUnitIdentifier", 384);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "libnutrition/proto/service/specialized_unit_messages.proto", &protobuf_RegisterTypes);
  SpecializedUnitLoadResponse::default_instance_ = new SpecializedUnitLoadResponse();
  SpecializedUnitLoadRequest::default_instance_ = new SpecializedUnitLoadRequest();
  SpecializedUnitLoadResponse::default_instance_->InitAsDefaultInstance();
  SpecializedUnitLoadRequest::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_libnutrition_2fproto_2fservice_2fspecialized_5funit_5fmessages_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_libnutrition_2fproto_2fservice_2fspecialized_5funit_5fmessages_2eproto {
  StaticDescriptorInitializer_libnutrition_2fproto_2fservice_2fspecialized_5funit_5fmessages_2eproto() {
    protobuf_AddDesc_libnutrition_2fproto_2fservice_2fspecialized_5funit_5fmessages_2eproto();
  }
} static_descriptor_initializer_libnutrition_2fproto_2fservice_2fspecialized_5funit_5fmessages_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int SpecializedUnitLoadResponse::kSpecializedUnitsFieldNumber;
const int SpecializedUnitLoadResponse::kErrorFieldNumber;
#endif  // !_MSC_VER

SpecializedUnitLoadResponse::SpecializedUnitLoadResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SpecializedUnitLoadResponse::InitAsDefaultInstance() {
  error_ = const_cast< ::Error*>(&::Error::default_instance());
}

SpecializedUnitLoadResponse::SpecializedUnitLoadResponse(const SpecializedUnitLoadResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SpecializedUnitLoadResponse::SharedCtor() {
  _cached_size_ = 0;
  error_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SpecializedUnitLoadResponse::~SpecializedUnitLoadResponse() {
  SharedDtor();
}

void SpecializedUnitLoadResponse::SharedDtor() {
  if (this != default_instance_) {
    delete error_;
  }
}

void SpecializedUnitLoadResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SpecializedUnitLoadResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SpecializedUnitLoadResponse_descriptor_;
}

const SpecializedUnitLoadResponse& SpecializedUnitLoadResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_libnutrition_2fproto_2fservice_2fspecialized_5funit_5fmessages_2eproto();  return *default_instance_;
}

SpecializedUnitLoadResponse* SpecializedUnitLoadResponse::default_instance_ = NULL;

SpecializedUnitLoadResponse* SpecializedUnitLoadResponse::New() const {
  return new SpecializedUnitLoadResponse;
}

void SpecializedUnitLoadResponse::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (_has_bit(1)) {
      if (error_ != NULL) error_->::Error::Clear();
    }
  }
  specializedunits_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SpecializedUnitLoadResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .SpecializedUnitData specializedUnits = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_specializedUnits:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_specializedunits()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_specializedUnits;
        if (input->ExpectTag(802)) goto parse_error;
        break;
      }
      
      // optional .Error error = 100;
      case 100: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SpecializedUnitLoadResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .SpecializedUnitData specializedUnits = 1;
  for (int i = 0; i < this->specializedunits_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->specializedunits(i), output);
  }
  
  // optional .Error error = 100;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100, this->error(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SpecializedUnitLoadResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .SpecializedUnitData specializedUnits = 1;
  for (int i = 0; i < this->specializedunits_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->specializedunits(i), target);
  }
  
  // optional .Error error = 100;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        100, this->error(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SpecializedUnitLoadResponse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .Error error = 100;
    if (has_error()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->error());
    }
    
  }
  // repeated .SpecializedUnitData specializedUnits = 1;
  total_size += 1 * this->specializedunits_size();
  for (int i = 0; i < this->specializedunits_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->specializedunits(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SpecializedUnitLoadResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SpecializedUnitLoadResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SpecializedUnitLoadResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SpecializedUnitLoadResponse::MergeFrom(const SpecializedUnitLoadResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  specializedunits_.MergeFrom(from.specializedunits_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from._has_bit(1)) {
      mutable_error()->::Error::MergeFrom(from.error());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SpecializedUnitLoadResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpecializedUnitLoadResponse::CopyFrom(const SpecializedUnitLoadResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecializedUnitLoadResponse::IsInitialized() const {
  
  return true;
}

void SpecializedUnitLoadResponse::Swap(SpecializedUnitLoadResponse* other) {
  if (other != this) {
    specializedunits_.Swap(&other->specializedunits_);
    std::swap(error_, other->error_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SpecializedUnitLoadResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SpecializedUnitLoadResponse_descriptor_;
  metadata.reflection = SpecializedUnitLoadResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SpecializedUnitLoadRequest::kOmitFieldNumber;
const int SpecializedUnitLoadRequest::kRequestedSingleFoodIdsFieldNumber;
const int SpecializedUnitLoadRequest::kRequestedIdsFieldNumber;
#endif  // !_MSC_VER

SpecializedUnitLoadRequest::SpecializedUnitLoadRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SpecializedUnitLoadRequest::InitAsDefaultInstance() {
}

SpecializedUnitLoadRequest::SpecializedUnitLoadRequest(const SpecializedUnitLoadRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SpecializedUnitLoadRequest::SharedCtor() {
  _cached_size_ = 0;
  omit_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SpecializedUnitLoadRequest::~SpecializedUnitLoadRequest() {
  SharedDtor();
}

void SpecializedUnitLoadRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SpecializedUnitLoadRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SpecializedUnitLoadRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SpecializedUnitLoadRequest_descriptor_;
}

const SpecializedUnitLoadRequest& SpecializedUnitLoadRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_libnutrition_2fproto_2fservice_2fspecialized_5funit_5fmessages_2eproto();  return *default_instance_;
}

SpecializedUnitLoadRequest* SpecializedUnitLoadRequest::default_instance_ = NULL;

SpecializedUnitLoadRequest* SpecializedUnitLoadRequest::New() const {
  return new SpecializedUnitLoadRequest;
}

void SpecializedUnitLoadRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    omit_ = false;
  }
  requestedsinglefoodids_.Clear();
  requestedids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SpecializedUnitLoadRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool omit = 1 [default = false];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &omit_)));
          _set_bit(0);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_requestedSingleFoodIds;
        break;
      }
      
      // repeated int32 requestedSingleFoodIds = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_requestedSingleFoodIds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_requestedsinglefoodids())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_requestedsinglefoodids())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_requestedSingleFoodIds;
        if (input->ExpectTag(26)) goto parse_requestedIds;
        break;
      }
      
      // repeated .SpecializedUnitIdentifier requestedIds = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_requestedIds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_requestedids()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_requestedIds;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SpecializedUnitLoadRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional bool omit = 1 [default = false];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->omit(), output);
  }
  
  // repeated int32 requestedSingleFoodIds = 2;
  for (int i = 0; i < this->requestedsinglefoodids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->requestedsinglefoodids(i), output);
  }
  
  // repeated .SpecializedUnitIdentifier requestedIds = 3;
  for (int i = 0; i < this->requestedids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->requestedids(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SpecializedUnitLoadRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional bool omit = 1 [default = false];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->omit(), target);
  }
  
  // repeated int32 requestedSingleFoodIds = 2;
  for (int i = 0; i < this->requestedsinglefoodids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->requestedsinglefoodids(i), target);
  }
  
  // repeated .SpecializedUnitIdentifier requestedIds = 3;
  for (int i = 0; i < this->requestedids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->requestedids(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SpecializedUnitLoadRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool omit = 1 [default = false];
    if (has_omit()) {
      total_size += 1 + 1;
    }
    
  }
  // repeated int32 requestedSingleFoodIds = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->requestedsinglefoodids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->requestedsinglefoodids(i));
    }
    total_size += 1 * this->requestedsinglefoodids_size() + data_size;
  }
  
  // repeated .SpecializedUnitIdentifier requestedIds = 3;
  total_size += 1 * this->requestedids_size();
  for (int i = 0; i < this->requestedids_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->requestedids(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SpecializedUnitLoadRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SpecializedUnitLoadRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SpecializedUnitLoadRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SpecializedUnitLoadRequest::MergeFrom(const SpecializedUnitLoadRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  requestedsinglefoodids_.MergeFrom(from.requestedsinglefoodids_);
  requestedids_.MergeFrom(from.requestedids_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_omit(from.omit());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SpecializedUnitLoadRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpecializedUnitLoadRequest::CopyFrom(const SpecializedUnitLoadRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecializedUnitLoadRequest::IsInitialized() const {
  
  return true;
}

void SpecializedUnitLoadRequest::Swap(SpecializedUnitLoadRequest* other) {
  if (other != this) {
    std::swap(omit_, other->omit_);
    requestedsinglefoodids_.Swap(&other->requestedsinglefoodids_);
    requestedids_.Swap(&other->requestedids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SpecializedUnitLoadRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SpecializedUnitLoadRequest_descriptor_;
  metadata.reflection = SpecializedUnitLoadRequest_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
