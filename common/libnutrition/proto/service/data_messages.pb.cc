// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "libnutrition/proto/service/data_messages.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* DataLoadRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DataLoadRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DataLoadResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DataLoadResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* DataStoreRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DataStoreRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DataStoreResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DataStoreResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* DataDeleteRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DataDeleteRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DataDeleteResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DataDeleteResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_libnutrition_2fproto_2fservice_2fdata_5fmessages_2eproto() {
  protobuf_AddDesc_libnutrition_2fproto_2fservice_2fdata_5fmessages_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "libnutrition/proto/service/data_messages.proto");
  GOOGLE_CHECK(file != NULL);
  DataLoadRequest_descriptor_ = file->message_type(0);
  static const int DataLoadRequest_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataLoadRequest, singlefoodloadrequest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataLoadRequest, compositefoodloadrequest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataLoadRequest, templateloadrequest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataLoadRequest, mealloadrequest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataLoadRequest, nutrientloadrequest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataLoadRequest, unitloadrequest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataLoadRequest, specializedunitloadrequest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataLoadRequest, grouploadrequest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataLoadRequest, userloadrequest_),
  };
  DataLoadRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DataLoadRequest_descriptor_,
      DataLoadRequest::default_instance_,
      DataLoadRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataLoadRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataLoadRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DataLoadRequest));
  DataLoadResponse_descriptor_ = file->message_type(1);
  static const int DataLoadResponse_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataLoadResponse, singlefoodloadresponse_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataLoadResponse, compositefoodloadresponse_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataLoadResponse, templateloadresponse_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataLoadResponse, mealloadresponse_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataLoadResponse, nutrientloadresponse_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataLoadResponse, unitloadresponse_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataLoadResponse, specializedunitloadresponse_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataLoadResponse, grouploadresponse_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataLoadResponse, userloadresponse_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataLoadResponse, error_),
  };
  DataLoadResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DataLoadResponse_descriptor_,
      DataLoadResponse::default_instance_,
      DataLoadResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataLoadResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataLoadResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DataLoadResponse));
  DataStoreRequest_descriptor_ = file->message_type(2);
  static const int DataStoreRequest_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataStoreRequest, singlefoodstorerequest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataStoreRequest, compositefoodstorerequest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataStoreRequest, templatestorerequest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataStoreRequest, mealstorerequest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataStoreRequest, userstorerequest_),
  };
  DataStoreRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DataStoreRequest_descriptor_,
      DataStoreRequest::default_instance_,
      DataStoreRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataStoreRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataStoreRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DataStoreRequest));
  DataStoreResponse_descriptor_ = file->message_type(3);
  static const int DataStoreResponse_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataStoreResponse, singlefoodstoreresponse_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataStoreResponse, compositefoodstoreresponse_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataStoreResponse, templatestoreresponse_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataStoreResponse, mealstoreresponse_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataStoreResponse, userstoreresponse_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataStoreResponse, error_),
  };
  DataStoreResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DataStoreResponse_descriptor_,
      DataStoreResponse::default_instance_,
      DataStoreResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataStoreResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataStoreResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DataStoreResponse));
  DataDeleteRequest_descriptor_ = file->message_type(4);
  static const int DataDeleteRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataDeleteRequest, singlefooddeleterequest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataDeleteRequest, compositefooddeleterequest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataDeleteRequest, templatedeleterequest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataDeleteRequest, mealdeleterequest_),
  };
  DataDeleteRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DataDeleteRequest_descriptor_,
      DataDeleteRequest::default_instance_,
      DataDeleteRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataDeleteRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataDeleteRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DataDeleteRequest));
  DataDeleteResponse_descriptor_ = file->message_type(5);
  static const int DataDeleteResponse_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataDeleteResponse, singlefooddeleteresponse_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataDeleteResponse, compositefooddeleteresponse_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataDeleteResponse, templatedeleteresponse_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataDeleteResponse, mealdeleteresponse_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataDeleteResponse, error_),
  };
  DataDeleteResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DataDeleteResponse_descriptor_,
      DataDeleteResponse::default_instance_,
      DataDeleteResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataDeleteResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataDeleteResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DataDeleteResponse));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_libnutrition_2fproto_2fservice_2fdata_5fmessages_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DataLoadRequest_descriptor_, &DataLoadRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DataLoadResponse_descriptor_, &DataLoadResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DataStoreRequest_descriptor_, &DataStoreRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DataStoreResponse_descriptor_, &DataStoreResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DataDeleteRequest_descriptor_, &DataDeleteRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DataDeleteResponse_descriptor_, &DataDeleteResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_libnutrition_2fproto_2fservice_2fdata_5fmessages_2eproto() {
  delete DataLoadRequest::default_instance_;
  delete DataLoadRequest_reflection_;
  delete DataLoadResponse::default_instance_;
  delete DataLoadResponse_reflection_;
  delete DataStoreRequest::default_instance_;
  delete DataStoreRequest_reflection_;
  delete DataStoreResponse::default_instance_;
  delete DataStoreResponse_reflection_;
  delete DataDeleteRequest::default_instance_;
  delete DataDeleteRequest_reflection_;
  delete DataDeleteResponse::default_instance_;
  delete DataDeleteResponse_reflection_;
}

void protobuf_AddDesc_libnutrition_2fproto_2fservice_2fdata_5fmessages_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_libnutrition_2fproto_2fservice_2fsingle_5ffood_5fmessages_2eproto();
  ::protobuf_AddDesc_libnutrition_2fproto_2fservice_2fcomposite_5ffood_5fmessages_2eproto();
  ::protobuf_AddDesc_libnutrition_2fproto_2fservice_2ftemplate_5fmessages_2eproto();
  ::protobuf_AddDesc_libnutrition_2fproto_2fservice_2fmeal_5fmessages_2eproto();
  ::protobuf_AddDesc_libnutrition_2fproto_2fservice_2fnutrient_5fmessages_2eproto();
  ::protobuf_AddDesc_libnutrition_2fproto_2fservice_2funit_5fmessages_2eproto();
  ::protobuf_AddDesc_libnutrition_2fproto_2fservice_2fspecialized_5funit_5fmessages_2eproto();
  ::protobuf_AddDesc_libnutrition_2fproto_2fservice_2fgroup_5fmessages_2eproto();
  ::protobuf_AddDesc_libnutrition_2fproto_2fservice_2fuser_5fmessages_2eproto();
  ::protobuf_AddDesc_libnutrition_2fproto_2fservice_2ferror_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n.libnutrition/proto/service/data_messag"
    "es.proto\0325libnutrition/proto/service/sin"
    "gle_food_messages.proto\0328libnutrition/pr"
    "oto/service/composite_food_messages.prot"
    "o\0322libnutrition/proto/service/template_m"
    "essages.proto\032.libnutrition/proto/servic"
    "e/meal_messages.proto\0322libnutrition/prot"
    "o/service/nutrient_messages.proto\032.libnu"
    "trition/proto/service/unit_messages.prot"
    "o\032:libnutrition/proto/service/specialize"
    "d_unit_messages.proto\032/libnutrition/prot"
    "o/service/group_messages.proto\032.libnutri"
    "tion/proto/service/user_messages.proto\032&"
    "libnutrition/proto/service/error.proto\"\332"
    "\003\n\017DataLoadRequest\0225\n\025singleFoodLoadRequ"
    "est\030\001 \001(\0132\026.SingleFoodLoadRequest\022;\n\030com"
    "positeFoodLoadRequest\030\002 \001(\0132\031.CompositeF"
    "oodLoadRequest\0221\n\023templateLoadRequest\030\003 "
    "\001(\0132\024.TemplateLoadRequest\022)\n\017mealLoadReq"
    "uest\030\004 \001(\0132\020.MealLoadRequest\0221\n\023nutrient"
    "LoadRequest\030\005 \001(\0132\024.NutrientLoadRequest\022"
    ")\n\017unitLoadRequest\030\006 \001(\0132\020.UnitLoadReque"
    "st\022?\n\032specializedUnitLoadRequest\030\007 \001(\0132\033"
    ".SpecializedUnitLoadRequest\022+\n\020groupLoad"
    "Request\030\010 \001(\0132\021.GroupLoadRequest\022)\n\017user"
    "LoadRequest\030\t \001(\0132\020.UserLoadRequest\"\204\004\n\020"
    "DataLoadResponse\0227\n\026singleFoodLoadRespon"
    "se\030\001 \001(\0132\027.SingleFoodLoadResponse\022=\n\031com"
    "positeFoodLoadResponse\030\002 \001(\0132\032.Composite"
    "FoodLoadResponse\0223\n\024templateLoadResponse"
    "\030\003 \001(\0132\025.TemplateLoadResponse\022+\n\020mealLoa"
    "dResponse\030\004 \001(\0132\021.MealLoadResponse\0223\n\024nu"
    "trientLoadResponse\030\005 \001(\0132\025.NutrientLoadR"
    "esponse\022+\n\020unitLoadResponse\030\006 \001(\0132\021.Unit"
    "LoadResponse\022A\n\033specializedUnitLoadRespo"
    "nse\030\007 \001(\0132\034.SpecializedUnitLoadResponse\022"
    "-\n\021groupLoadResponse\030\010 \001(\0132\022.GroupLoadRe"
    "sponse\022+\n\020userLoadResponse\030\t \001(\0132\021.UserL"
    "oadResponse\022\025\n\005error\030d \001(\0132\006.Error\"\231\002\n\020D"
    "ataStoreRequest\0227\n\026singleFoodStoreReques"
    "t\030\001 \001(\0132\027.SingleFoodStoreRequest\022=\n\031comp"
    "ositeFoodStoreRequest\030\002 \001(\0132\032.CompositeF"
    "oodStoreRequest\0223\n\024templateStoreRequest\030"
    "\003 \001(\0132\025.TemplateStoreRequest\022+\n\020mealStor"
    "eRequest\030\004 \001(\0132\021.MealStoreRequest\022+\n\020use"
    "rStoreRequest\030\t \001(\0132\021.UserStoreRequest\"\272"
    "\002\n\021DataStoreResponse\0229\n\027singleFoodStoreR"
    "esponse\030\001 \001(\0132\030.SingleFoodStoreResponse\022"
    "?\n\032compositeFoodStoreResponse\030\002 \001(\0132\033.Co"
    "mpositeFoodStoreResponse\0225\n\025templateStor"
    "eResponse\030\003 \001(\0132\026.TemplateStoreResponse\022"
    "-\n\021mealStoreResponse\030\004 \001(\0132\022.MealStoreRe"
    "sponse\022,\n\021userStoreResponse\030\t \001(\0132\021.User"
    "StoreRequest\022\025\n\005error\030d \001(\0132\006.Error\"\365\001\n\021"
    "DataDeleteRequest\0229\n\027singleFoodDeleteReq"
    "uest\030\001 \001(\0132\030.SingleFoodDeleteRequest\022?\n\032"
    "compositeFoodDeleteRequest\030\002 \001(\0132\033.Compo"
    "siteFoodDeleteRequest\0225\n\025templateDeleteR"
    "equest\030\003 \001(\0132\026.TemplateDeleteRequest\022-\n\021"
    "mealDeleteRequest\030\004 \001(\0132\022.MealDeleteRequ"
    "est\"\225\002\n\022DataDeleteResponse\022;\n\030singleFood"
    "DeleteResponse\030\001 \001(\0132\031.SingleFoodDeleteR"
    "esponse\022A\n\033compositeFoodDeleteResponse\030\002"
    " \001(\0132\034.CompositeFoodDeleteResponse\0227\n\026te"
    "mplateDeleteResponse\030\003 \001(\0132\027.TemplateDel"
    "eteResponse\022/\n\022mealDeleteResponse\030\004 \001(\0132"
    "\023.MealDeleteResponse\022\025\n\005error\030d \001(\0132\006.Er"
    "ror", 2683);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "libnutrition/proto/service/data_messages.proto", &protobuf_RegisterTypes);
  DataLoadRequest::default_instance_ = new DataLoadRequest();
  DataLoadResponse::default_instance_ = new DataLoadResponse();
  DataStoreRequest::default_instance_ = new DataStoreRequest();
  DataStoreResponse::default_instance_ = new DataStoreResponse();
  DataDeleteRequest::default_instance_ = new DataDeleteRequest();
  DataDeleteResponse::default_instance_ = new DataDeleteResponse();
  DataLoadRequest::default_instance_->InitAsDefaultInstance();
  DataLoadResponse::default_instance_->InitAsDefaultInstance();
  DataStoreRequest::default_instance_->InitAsDefaultInstance();
  DataStoreResponse::default_instance_->InitAsDefaultInstance();
  DataDeleteRequest::default_instance_->InitAsDefaultInstance();
  DataDeleteResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_libnutrition_2fproto_2fservice_2fdata_5fmessages_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_libnutrition_2fproto_2fservice_2fdata_5fmessages_2eproto {
  StaticDescriptorInitializer_libnutrition_2fproto_2fservice_2fdata_5fmessages_2eproto() {
    protobuf_AddDesc_libnutrition_2fproto_2fservice_2fdata_5fmessages_2eproto();
  }
} static_descriptor_initializer_libnutrition_2fproto_2fservice_2fdata_5fmessages_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int DataLoadRequest::kSingleFoodLoadRequestFieldNumber;
const int DataLoadRequest::kCompositeFoodLoadRequestFieldNumber;
const int DataLoadRequest::kTemplateLoadRequestFieldNumber;
const int DataLoadRequest::kMealLoadRequestFieldNumber;
const int DataLoadRequest::kNutrientLoadRequestFieldNumber;
const int DataLoadRequest::kUnitLoadRequestFieldNumber;
const int DataLoadRequest::kSpecializedUnitLoadRequestFieldNumber;
const int DataLoadRequest::kGroupLoadRequestFieldNumber;
const int DataLoadRequest::kUserLoadRequestFieldNumber;
#endif  // !_MSC_VER

DataLoadRequest::DataLoadRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DataLoadRequest::InitAsDefaultInstance() {
  singlefoodloadrequest_ = const_cast< ::SingleFoodLoadRequest*>(&::SingleFoodLoadRequest::default_instance());
  compositefoodloadrequest_ = const_cast< ::CompositeFoodLoadRequest*>(&::CompositeFoodLoadRequest::default_instance());
  templateloadrequest_ = const_cast< ::TemplateLoadRequest*>(&::TemplateLoadRequest::default_instance());
  mealloadrequest_ = const_cast< ::MealLoadRequest*>(&::MealLoadRequest::default_instance());
  nutrientloadrequest_ = const_cast< ::NutrientLoadRequest*>(&::NutrientLoadRequest::default_instance());
  unitloadrequest_ = const_cast< ::UnitLoadRequest*>(&::UnitLoadRequest::default_instance());
  specializedunitloadrequest_ = const_cast< ::SpecializedUnitLoadRequest*>(&::SpecializedUnitLoadRequest::default_instance());
  grouploadrequest_ = const_cast< ::GroupLoadRequest*>(&::GroupLoadRequest::default_instance());
  userloadrequest_ = const_cast< ::UserLoadRequest*>(&::UserLoadRequest::default_instance());
}

DataLoadRequest::DataLoadRequest(const DataLoadRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DataLoadRequest::SharedCtor() {
  _cached_size_ = 0;
  singlefoodloadrequest_ = NULL;
  compositefoodloadrequest_ = NULL;
  templateloadrequest_ = NULL;
  mealloadrequest_ = NULL;
  nutrientloadrequest_ = NULL;
  unitloadrequest_ = NULL;
  specializedunitloadrequest_ = NULL;
  grouploadrequest_ = NULL;
  userloadrequest_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DataLoadRequest::~DataLoadRequest() {
  SharedDtor();
}

void DataLoadRequest::SharedDtor() {
  if (this != default_instance_) {
    delete singlefoodloadrequest_;
    delete compositefoodloadrequest_;
    delete templateloadrequest_;
    delete mealloadrequest_;
    delete nutrientloadrequest_;
    delete unitloadrequest_;
    delete specializedunitloadrequest_;
    delete grouploadrequest_;
    delete userloadrequest_;
  }
}

void DataLoadRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataLoadRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DataLoadRequest_descriptor_;
}

const DataLoadRequest& DataLoadRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_libnutrition_2fproto_2fservice_2fdata_5fmessages_2eproto();  return *default_instance_;
}

DataLoadRequest* DataLoadRequest::default_instance_ = NULL;

DataLoadRequest* DataLoadRequest::New() const {
  return new DataLoadRequest;
}

void DataLoadRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (singlefoodloadrequest_ != NULL) singlefoodloadrequest_->::SingleFoodLoadRequest::Clear();
    }
    if (_has_bit(1)) {
      if (compositefoodloadrequest_ != NULL) compositefoodloadrequest_->::CompositeFoodLoadRequest::Clear();
    }
    if (_has_bit(2)) {
      if (templateloadrequest_ != NULL) templateloadrequest_->::TemplateLoadRequest::Clear();
    }
    if (_has_bit(3)) {
      if (mealloadrequest_ != NULL) mealloadrequest_->::MealLoadRequest::Clear();
    }
    if (_has_bit(4)) {
      if (nutrientloadrequest_ != NULL) nutrientloadrequest_->::NutrientLoadRequest::Clear();
    }
    if (_has_bit(5)) {
      if (unitloadrequest_ != NULL) unitloadrequest_->::UnitLoadRequest::Clear();
    }
    if (_has_bit(6)) {
      if (specializedunitloadrequest_ != NULL) specializedunitloadrequest_->::SpecializedUnitLoadRequest::Clear();
    }
    if (_has_bit(7)) {
      if (grouploadrequest_ != NULL) grouploadrequest_->::GroupLoadRequest::Clear();
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (_has_bit(8)) {
      if (userloadrequest_ != NULL) userloadrequest_->::UserLoadRequest::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DataLoadRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SingleFoodLoadRequest singleFoodLoadRequest = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_singlefoodloadrequest()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_compositeFoodLoadRequest;
        break;
      }
      
      // optional .CompositeFoodLoadRequest compositeFoodLoadRequest = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_compositeFoodLoadRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_compositefoodloadrequest()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_templateLoadRequest;
        break;
      }
      
      // optional .TemplateLoadRequest templateLoadRequest = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_templateLoadRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_templateloadrequest()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_mealLoadRequest;
        break;
      }
      
      // optional .MealLoadRequest mealLoadRequest = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mealLoadRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mealloadrequest()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_nutrientLoadRequest;
        break;
      }
      
      // optional .NutrientLoadRequest nutrientLoadRequest = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_nutrientLoadRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_nutrientloadrequest()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_unitLoadRequest;
        break;
      }
      
      // optional .UnitLoadRequest unitLoadRequest = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_unitLoadRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_unitloadrequest()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_specializedUnitLoadRequest;
        break;
      }
      
      // optional .SpecializedUnitLoadRequest specializedUnitLoadRequest = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_specializedUnitLoadRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_specializedunitloadrequest()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_groupLoadRequest;
        break;
      }
      
      // optional .GroupLoadRequest groupLoadRequest = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_groupLoadRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_grouploadrequest()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_userLoadRequest;
        break;
      }
      
      // optional .UserLoadRequest userLoadRequest = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_userLoadRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userloadrequest()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DataLoadRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .SingleFoodLoadRequest singleFoodLoadRequest = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->singlefoodloadrequest(), output);
  }
  
  // optional .CompositeFoodLoadRequest compositeFoodLoadRequest = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->compositefoodloadrequest(), output);
  }
  
  // optional .TemplateLoadRequest templateLoadRequest = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->templateloadrequest(), output);
  }
  
  // optional .MealLoadRequest mealLoadRequest = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->mealloadrequest(), output);
  }
  
  // optional .NutrientLoadRequest nutrientLoadRequest = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->nutrientloadrequest(), output);
  }
  
  // optional .UnitLoadRequest unitLoadRequest = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->unitloadrequest(), output);
  }
  
  // optional .SpecializedUnitLoadRequest specializedUnitLoadRequest = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->specializedunitloadrequest(), output);
  }
  
  // optional .GroupLoadRequest groupLoadRequest = 8;
  if (_has_bit(7)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->grouploadrequest(), output);
  }
  
  // optional .UserLoadRequest userLoadRequest = 9;
  if (_has_bit(8)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->userloadrequest(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DataLoadRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .SingleFoodLoadRequest singleFoodLoadRequest = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->singlefoodloadrequest(), target);
  }
  
  // optional .CompositeFoodLoadRequest compositeFoodLoadRequest = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->compositefoodloadrequest(), target);
  }
  
  // optional .TemplateLoadRequest templateLoadRequest = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->templateloadrequest(), target);
  }
  
  // optional .MealLoadRequest mealLoadRequest = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->mealloadrequest(), target);
  }
  
  // optional .NutrientLoadRequest nutrientLoadRequest = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->nutrientloadrequest(), target);
  }
  
  // optional .UnitLoadRequest unitLoadRequest = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->unitloadrequest(), target);
  }
  
  // optional .SpecializedUnitLoadRequest specializedUnitLoadRequest = 7;
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->specializedunitloadrequest(), target);
  }
  
  // optional .GroupLoadRequest groupLoadRequest = 8;
  if (_has_bit(7)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->grouploadrequest(), target);
  }
  
  // optional .UserLoadRequest userLoadRequest = 9;
  if (_has_bit(8)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->userloadrequest(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DataLoadRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SingleFoodLoadRequest singleFoodLoadRequest = 1;
    if (has_singlefoodloadrequest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->singlefoodloadrequest());
    }
    
    // optional .CompositeFoodLoadRequest compositeFoodLoadRequest = 2;
    if (has_compositefoodloadrequest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->compositefoodloadrequest());
    }
    
    // optional .TemplateLoadRequest templateLoadRequest = 3;
    if (has_templateloadrequest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->templateloadrequest());
    }
    
    // optional .MealLoadRequest mealLoadRequest = 4;
    if (has_mealloadrequest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->mealloadrequest());
    }
    
    // optional .NutrientLoadRequest nutrientLoadRequest = 5;
    if (has_nutrientloadrequest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->nutrientloadrequest());
    }
    
    // optional .UnitLoadRequest unitLoadRequest = 6;
    if (has_unitloadrequest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->unitloadrequest());
    }
    
    // optional .SpecializedUnitLoadRequest specializedUnitLoadRequest = 7;
    if (has_specializedunitloadrequest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->specializedunitloadrequest());
    }
    
    // optional .GroupLoadRequest groupLoadRequest = 8;
    if (has_grouploadrequest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->grouploadrequest());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .UserLoadRequest userLoadRequest = 9;
    if (has_userloadrequest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->userloadrequest());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataLoadRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DataLoadRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DataLoadRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DataLoadRequest::MergeFrom(const DataLoadRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_singlefoodloadrequest()->::SingleFoodLoadRequest::MergeFrom(from.singlefoodloadrequest());
    }
    if (from._has_bit(1)) {
      mutable_compositefoodloadrequest()->::CompositeFoodLoadRequest::MergeFrom(from.compositefoodloadrequest());
    }
    if (from._has_bit(2)) {
      mutable_templateloadrequest()->::TemplateLoadRequest::MergeFrom(from.templateloadrequest());
    }
    if (from._has_bit(3)) {
      mutable_mealloadrequest()->::MealLoadRequest::MergeFrom(from.mealloadrequest());
    }
    if (from._has_bit(4)) {
      mutable_nutrientloadrequest()->::NutrientLoadRequest::MergeFrom(from.nutrientloadrequest());
    }
    if (from._has_bit(5)) {
      mutable_unitloadrequest()->::UnitLoadRequest::MergeFrom(from.unitloadrequest());
    }
    if (from._has_bit(6)) {
      mutable_specializedunitloadrequest()->::SpecializedUnitLoadRequest::MergeFrom(from.specializedunitloadrequest());
    }
    if (from._has_bit(7)) {
      mutable_grouploadrequest()->::GroupLoadRequest::MergeFrom(from.grouploadrequest());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from._has_bit(8)) {
      mutable_userloadrequest()->::UserLoadRequest::MergeFrom(from.userloadrequest());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DataLoadRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataLoadRequest::CopyFrom(const DataLoadRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataLoadRequest::IsInitialized() const {
  
  if (has_specializedunitloadrequest()) {
    if (!this->specializedunitloadrequest().IsInitialized()) return false;
  }
  return true;
}

void DataLoadRequest::Swap(DataLoadRequest* other) {
  if (other != this) {
    std::swap(singlefoodloadrequest_, other->singlefoodloadrequest_);
    std::swap(compositefoodloadrequest_, other->compositefoodloadrequest_);
    std::swap(templateloadrequest_, other->templateloadrequest_);
    std::swap(mealloadrequest_, other->mealloadrequest_);
    std::swap(nutrientloadrequest_, other->nutrientloadrequest_);
    std::swap(unitloadrequest_, other->unitloadrequest_);
    std::swap(specializedunitloadrequest_, other->specializedunitloadrequest_);
    std::swap(grouploadrequest_, other->grouploadrequest_);
    std::swap(userloadrequest_, other->userloadrequest_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DataLoadRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DataLoadRequest_descriptor_;
  metadata.reflection = DataLoadRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DataLoadResponse::kSingleFoodLoadResponseFieldNumber;
const int DataLoadResponse::kCompositeFoodLoadResponseFieldNumber;
const int DataLoadResponse::kTemplateLoadResponseFieldNumber;
const int DataLoadResponse::kMealLoadResponseFieldNumber;
const int DataLoadResponse::kNutrientLoadResponseFieldNumber;
const int DataLoadResponse::kUnitLoadResponseFieldNumber;
const int DataLoadResponse::kSpecializedUnitLoadResponseFieldNumber;
const int DataLoadResponse::kGroupLoadResponseFieldNumber;
const int DataLoadResponse::kUserLoadResponseFieldNumber;
const int DataLoadResponse::kErrorFieldNumber;
#endif  // !_MSC_VER

DataLoadResponse::DataLoadResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DataLoadResponse::InitAsDefaultInstance() {
  singlefoodloadresponse_ = const_cast< ::SingleFoodLoadResponse*>(&::SingleFoodLoadResponse::default_instance());
  compositefoodloadresponse_ = const_cast< ::CompositeFoodLoadResponse*>(&::CompositeFoodLoadResponse::default_instance());
  templateloadresponse_ = const_cast< ::TemplateLoadResponse*>(&::TemplateLoadResponse::default_instance());
  mealloadresponse_ = const_cast< ::MealLoadResponse*>(&::MealLoadResponse::default_instance());
  nutrientloadresponse_ = const_cast< ::NutrientLoadResponse*>(&::NutrientLoadResponse::default_instance());
  unitloadresponse_ = const_cast< ::UnitLoadResponse*>(&::UnitLoadResponse::default_instance());
  specializedunitloadresponse_ = const_cast< ::SpecializedUnitLoadResponse*>(&::SpecializedUnitLoadResponse::default_instance());
  grouploadresponse_ = const_cast< ::GroupLoadResponse*>(&::GroupLoadResponse::default_instance());
  userloadresponse_ = const_cast< ::UserLoadResponse*>(&::UserLoadResponse::default_instance());
  error_ = const_cast< ::Error*>(&::Error::default_instance());
}

DataLoadResponse::DataLoadResponse(const DataLoadResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DataLoadResponse::SharedCtor() {
  _cached_size_ = 0;
  singlefoodloadresponse_ = NULL;
  compositefoodloadresponse_ = NULL;
  templateloadresponse_ = NULL;
  mealloadresponse_ = NULL;
  nutrientloadresponse_ = NULL;
  unitloadresponse_ = NULL;
  specializedunitloadresponse_ = NULL;
  grouploadresponse_ = NULL;
  userloadresponse_ = NULL;
  error_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DataLoadResponse::~DataLoadResponse() {
  SharedDtor();
}

void DataLoadResponse::SharedDtor() {
  if (this != default_instance_) {
    delete singlefoodloadresponse_;
    delete compositefoodloadresponse_;
    delete templateloadresponse_;
    delete mealloadresponse_;
    delete nutrientloadresponse_;
    delete unitloadresponse_;
    delete specializedunitloadresponse_;
    delete grouploadresponse_;
    delete userloadresponse_;
    delete error_;
  }
}

void DataLoadResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataLoadResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DataLoadResponse_descriptor_;
}

const DataLoadResponse& DataLoadResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_libnutrition_2fproto_2fservice_2fdata_5fmessages_2eproto();  return *default_instance_;
}

DataLoadResponse* DataLoadResponse::default_instance_ = NULL;

DataLoadResponse* DataLoadResponse::New() const {
  return new DataLoadResponse;
}

void DataLoadResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (singlefoodloadresponse_ != NULL) singlefoodloadresponse_->::SingleFoodLoadResponse::Clear();
    }
    if (_has_bit(1)) {
      if (compositefoodloadresponse_ != NULL) compositefoodloadresponse_->::CompositeFoodLoadResponse::Clear();
    }
    if (_has_bit(2)) {
      if (templateloadresponse_ != NULL) templateloadresponse_->::TemplateLoadResponse::Clear();
    }
    if (_has_bit(3)) {
      if (mealloadresponse_ != NULL) mealloadresponse_->::MealLoadResponse::Clear();
    }
    if (_has_bit(4)) {
      if (nutrientloadresponse_ != NULL) nutrientloadresponse_->::NutrientLoadResponse::Clear();
    }
    if (_has_bit(5)) {
      if (unitloadresponse_ != NULL) unitloadresponse_->::UnitLoadResponse::Clear();
    }
    if (_has_bit(6)) {
      if (specializedunitloadresponse_ != NULL) specializedunitloadresponse_->::SpecializedUnitLoadResponse::Clear();
    }
    if (_has_bit(7)) {
      if (grouploadresponse_ != NULL) grouploadresponse_->::GroupLoadResponse::Clear();
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (_has_bit(8)) {
      if (userloadresponse_ != NULL) userloadresponse_->::UserLoadResponse::Clear();
    }
    if (_has_bit(9)) {
      if (error_ != NULL) error_->::Error::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DataLoadResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SingleFoodLoadResponse singleFoodLoadResponse = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_singlefoodloadresponse()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_compositeFoodLoadResponse;
        break;
      }
      
      // optional .CompositeFoodLoadResponse compositeFoodLoadResponse = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_compositeFoodLoadResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_compositefoodloadresponse()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_templateLoadResponse;
        break;
      }
      
      // optional .TemplateLoadResponse templateLoadResponse = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_templateLoadResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_templateloadresponse()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_mealLoadResponse;
        break;
      }
      
      // optional .MealLoadResponse mealLoadResponse = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mealLoadResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mealloadresponse()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_nutrientLoadResponse;
        break;
      }
      
      // optional .NutrientLoadResponse nutrientLoadResponse = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_nutrientLoadResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_nutrientloadresponse()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_unitLoadResponse;
        break;
      }
      
      // optional .UnitLoadResponse unitLoadResponse = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_unitLoadResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_unitloadresponse()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_specializedUnitLoadResponse;
        break;
      }
      
      // optional .SpecializedUnitLoadResponse specializedUnitLoadResponse = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_specializedUnitLoadResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_specializedunitloadresponse()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_groupLoadResponse;
        break;
      }
      
      // optional .GroupLoadResponse groupLoadResponse = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_groupLoadResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_grouploadresponse()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_userLoadResponse;
        break;
      }
      
      // optional .UserLoadResponse userLoadResponse = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_userLoadResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userloadresponse()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(802)) goto parse_error;
        break;
      }
      
      // optional .Error error = 100;
      case 100: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DataLoadResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .SingleFoodLoadResponse singleFoodLoadResponse = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->singlefoodloadresponse(), output);
  }
  
  // optional .CompositeFoodLoadResponse compositeFoodLoadResponse = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->compositefoodloadresponse(), output);
  }
  
  // optional .TemplateLoadResponse templateLoadResponse = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->templateloadresponse(), output);
  }
  
  // optional .MealLoadResponse mealLoadResponse = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->mealloadresponse(), output);
  }
  
  // optional .NutrientLoadResponse nutrientLoadResponse = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->nutrientloadresponse(), output);
  }
  
  // optional .UnitLoadResponse unitLoadResponse = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->unitloadresponse(), output);
  }
  
  // optional .SpecializedUnitLoadResponse specializedUnitLoadResponse = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->specializedunitloadresponse(), output);
  }
  
  // optional .GroupLoadResponse groupLoadResponse = 8;
  if (_has_bit(7)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->grouploadresponse(), output);
  }
  
  // optional .UserLoadResponse userLoadResponse = 9;
  if (_has_bit(8)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->userloadresponse(), output);
  }
  
  // optional .Error error = 100;
  if (_has_bit(9)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100, this->error(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DataLoadResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .SingleFoodLoadResponse singleFoodLoadResponse = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->singlefoodloadresponse(), target);
  }
  
  // optional .CompositeFoodLoadResponse compositeFoodLoadResponse = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->compositefoodloadresponse(), target);
  }
  
  // optional .TemplateLoadResponse templateLoadResponse = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->templateloadresponse(), target);
  }
  
  // optional .MealLoadResponse mealLoadResponse = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->mealloadresponse(), target);
  }
  
  // optional .NutrientLoadResponse nutrientLoadResponse = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->nutrientloadresponse(), target);
  }
  
  // optional .UnitLoadResponse unitLoadResponse = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->unitloadresponse(), target);
  }
  
  // optional .SpecializedUnitLoadResponse specializedUnitLoadResponse = 7;
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->specializedunitloadresponse(), target);
  }
  
  // optional .GroupLoadResponse groupLoadResponse = 8;
  if (_has_bit(7)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->grouploadresponse(), target);
  }
  
  // optional .UserLoadResponse userLoadResponse = 9;
  if (_has_bit(8)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->userloadresponse(), target);
  }
  
  // optional .Error error = 100;
  if (_has_bit(9)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        100, this->error(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DataLoadResponse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SingleFoodLoadResponse singleFoodLoadResponse = 1;
    if (has_singlefoodloadresponse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->singlefoodloadresponse());
    }
    
    // optional .CompositeFoodLoadResponse compositeFoodLoadResponse = 2;
    if (has_compositefoodloadresponse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->compositefoodloadresponse());
    }
    
    // optional .TemplateLoadResponse templateLoadResponse = 3;
    if (has_templateloadresponse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->templateloadresponse());
    }
    
    // optional .MealLoadResponse mealLoadResponse = 4;
    if (has_mealloadresponse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->mealloadresponse());
    }
    
    // optional .NutrientLoadResponse nutrientLoadResponse = 5;
    if (has_nutrientloadresponse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->nutrientloadresponse());
    }
    
    // optional .UnitLoadResponse unitLoadResponse = 6;
    if (has_unitloadresponse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->unitloadresponse());
    }
    
    // optional .SpecializedUnitLoadResponse specializedUnitLoadResponse = 7;
    if (has_specializedunitloadresponse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->specializedunitloadresponse());
    }
    
    // optional .GroupLoadResponse groupLoadResponse = 8;
    if (has_grouploadresponse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->grouploadresponse());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .UserLoadResponse userLoadResponse = 9;
    if (has_userloadresponse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->userloadresponse());
    }
    
    // optional .Error error = 100;
    if (has_error()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->error());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataLoadResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DataLoadResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DataLoadResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DataLoadResponse::MergeFrom(const DataLoadResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_singlefoodloadresponse()->::SingleFoodLoadResponse::MergeFrom(from.singlefoodloadresponse());
    }
    if (from._has_bit(1)) {
      mutable_compositefoodloadresponse()->::CompositeFoodLoadResponse::MergeFrom(from.compositefoodloadresponse());
    }
    if (from._has_bit(2)) {
      mutable_templateloadresponse()->::TemplateLoadResponse::MergeFrom(from.templateloadresponse());
    }
    if (from._has_bit(3)) {
      mutable_mealloadresponse()->::MealLoadResponse::MergeFrom(from.mealloadresponse());
    }
    if (from._has_bit(4)) {
      mutable_nutrientloadresponse()->::NutrientLoadResponse::MergeFrom(from.nutrientloadresponse());
    }
    if (from._has_bit(5)) {
      mutable_unitloadresponse()->::UnitLoadResponse::MergeFrom(from.unitloadresponse());
    }
    if (from._has_bit(6)) {
      mutable_specializedunitloadresponse()->::SpecializedUnitLoadResponse::MergeFrom(from.specializedunitloadresponse());
    }
    if (from._has_bit(7)) {
      mutable_grouploadresponse()->::GroupLoadResponse::MergeFrom(from.grouploadresponse());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from._has_bit(8)) {
      mutable_userloadresponse()->::UserLoadResponse::MergeFrom(from.userloadresponse());
    }
    if (from._has_bit(9)) {
      mutable_error()->::Error::MergeFrom(from.error());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DataLoadResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataLoadResponse::CopyFrom(const DataLoadResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataLoadResponse::IsInitialized() const {
  
  if (has_singlefoodloadresponse()) {
    if (!this->singlefoodloadresponse().IsInitialized()) return false;
  }
  if (has_compositefoodloadresponse()) {
    if (!this->compositefoodloadresponse().IsInitialized()) return false;
  }
  if (has_templateloadresponse()) {
    if (!this->templateloadresponse().IsInitialized()) return false;
  }
  if (has_mealloadresponse()) {
    if (!this->mealloadresponse().IsInitialized()) return false;
  }
  if (has_nutrientloadresponse()) {
    if (!this->nutrientloadresponse().IsInitialized()) return false;
  }
  if (has_unitloadresponse()) {
    if (!this->unitloadresponse().IsInitialized()) return false;
  }
  if (has_specializedunitloadresponse()) {
    if (!this->specializedunitloadresponse().IsInitialized()) return false;
  }
  if (has_grouploadresponse()) {
    if (!this->grouploadresponse().IsInitialized()) return false;
  }
  if (has_userloadresponse()) {
    if (!this->userloadresponse().IsInitialized()) return false;
  }
  if (has_error()) {
    if (!this->error().IsInitialized()) return false;
  }
  return true;
}

void DataLoadResponse::Swap(DataLoadResponse* other) {
  if (other != this) {
    std::swap(singlefoodloadresponse_, other->singlefoodloadresponse_);
    std::swap(compositefoodloadresponse_, other->compositefoodloadresponse_);
    std::swap(templateloadresponse_, other->templateloadresponse_);
    std::swap(mealloadresponse_, other->mealloadresponse_);
    std::swap(nutrientloadresponse_, other->nutrientloadresponse_);
    std::swap(unitloadresponse_, other->unitloadresponse_);
    std::swap(specializedunitloadresponse_, other->specializedunitloadresponse_);
    std::swap(grouploadresponse_, other->grouploadresponse_);
    std::swap(userloadresponse_, other->userloadresponse_);
    std::swap(error_, other->error_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DataLoadResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DataLoadResponse_descriptor_;
  metadata.reflection = DataLoadResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DataStoreRequest::kSingleFoodStoreRequestFieldNumber;
const int DataStoreRequest::kCompositeFoodStoreRequestFieldNumber;
const int DataStoreRequest::kTemplateStoreRequestFieldNumber;
const int DataStoreRequest::kMealStoreRequestFieldNumber;
const int DataStoreRequest::kUserStoreRequestFieldNumber;
#endif  // !_MSC_VER

DataStoreRequest::DataStoreRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DataStoreRequest::InitAsDefaultInstance() {
  singlefoodstorerequest_ = const_cast< ::SingleFoodStoreRequest*>(&::SingleFoodStoreRequest::default_instance());
  compositefoodstorerequest_ = const_cast< ::CompositeFoodStoreRequest*>(&::CompositeFoodStoreRequest::default_instance());
  templatestorerequest_ = const_cast< ::TemplateStoreRequest*>(&::TemplateStoreRequest::default_instance());
  mealstorerequest_ = const_cast< ::MealStoreRequest*>(&::MealStoreRequest::default_instance());
  userstorerequest_ = const_cast< ::UserStoreRequest*>(&::UserStoreRequest::default_instance());
}

DataStoreRequest::DataStoreRequest(const DataStoreRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DataStoreRequest::SharedCtor() {
  _cached_size_ = 0;
  singlefoodstorerequest_ = NULL;
  compositefoodstorerequest_ = NULL;
  templatestorerequest_ = NULL;
  mealstorerequest_ = NULL;
  userstorerequest_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DataStoreRequest::~DataStoreRequest() {
  SharedDtor();
}

void DataStoreRequest::SharedDtor() {
  if (this != default_instance_) {
    delete singlefoodstorerequest_;
    delete compositefoodstorerequest_;
    delete templatestorerequest_;
    delete mealstorerequest_;
    delete userstorerequest_;
  }
}

void DataStoreRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataStoreRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DataStoreRequest_descriptor_;
}

const DataStoreRequest& DataStoreRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_libnutrition_2fproto_2fservice_2fdata_5fmessages_2eproto();  return *default_instance_;
}

DataStoreRequest* DataStoreRequest::default_instance_ = NULL;

DataStoreRequest* DataStoreRequest::New() const {
  return new DataStoreRequest;
}

void DataStoreRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (singlefoodstorerequest_ != NULL) singlefoodstorerequest_->::SingleFoodStoreRequest::Clear();
    }
    if (_has_bit(1)) {
      if (compositefoodstorerequest_ != NULL) compositefoodstorerequest_->::CompositeFoodStoreRequest::Clear();
    }
    if (_has_bit(2)) {
      if (templatestorerequest_ != NULL) templatestorerequest_->::TemplateStoreRequest::Clear();
    }
    if (_has_bit(3)) {
      if (mealstorerequest_ != NULL) mealstorerequest_->::MealStoreRequest::Clear();
    }
    if (_has_bit(4)) {
      if (userstorerequest_ != NULL) userstorerequest_->::UserStoreRequest::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DataStoreRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SingleFoodStoreRequest singleFoodStoreRequest = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_singlefoodstorerequest()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_compositeFoodStoreRequest;
        break;
      }
      
      // optional .CompositeFoodStoreRequest compositeFoodStoreRequest = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_compositeFoodStoreRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_compositefoodstorerequest()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_templateStoreRequest;
        break;
      }
      
      // optional .TemplateStoreRequest templateStoreRequest = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_templateStoreRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_templatestorerequest()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_mealStoreRequest;
        break;
      }
      
      // optional .MealStoreRequest mealStoreRequest = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mealStoreRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mealstorerequest()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_userStoreRequest;
        break;
      }
      
      // optional .UserStoreRequest userStoreRequest = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_userStoreRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userstorerequest()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DataStoreRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .SingleFoodStoreRequest singleFoodStoreRequest = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->singlefoodstorerequest(), output);
  }
  
  // optional .CompositeFoodStoreRequest compositeFoodStoreRequest = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->compositefoodstorerequest(), output);
  }
  
  // optional .TemplateStoreRequest templateStoreRequest = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->templatestorerequest(), output);
  }
  
  // optional .MealStoreRequest mealStoreRequest = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->mealstorerequest(), output);
  }
  
  // optional .UserStoreRequest userStoreRequest = 9;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->userstorerequest(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DataStoreRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .SingleFoodStoreRequest singleFoodStoreRequest = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->singlefoodstorerequest(), target);
  }
  
  // optional .CompositeFoodStoreRequest compositeFoodStoreRequest = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->compositefoodstorerequest(), target);
  }
  
  // optional .TemplateStoreRequest templateStoreRequest = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->templatestorerequest(), target);
  }
  
  // optional .MealStoreRequest mealStoreRequest = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->mealstorerequest(), target);
  }
  
  // optional .UserStoreRequest userStoreRequest = 9;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->userstorerequest(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DataStoreRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SingleFoodStoreRequest singleFoodStoreRequest = 1;
    if (has_singlefoodstorerequest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->singlefoodstorerequest());
    }
    
    // optional .CompositeFoodStoreRequest compositeFoodStoreRequest = 2;
    if (has_compositefoodstorerequest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->compositefoodstorerequest());
    }
    
    // optional .TemplateStoreRequest templateStoreRequest = 3;
    if (has_templatestorerequest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->templatestorerequest());
    }
    
    // optional .MealStoreRequest mealStoreRequest = 4;
    if (has_mealstorerequest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->mealstorerequest());
    }
    
    // optional .UserStoreRequest userStoreRequest = 9;
    if (has_userstorerequest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->userstorerequest());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataStoreRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DataStoreRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DataStoreRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DataStoreRequest::MergeFrom(const DataStoreRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_singlefoodstorerequest()->::SingleFoodStoreRequest::MergeFrom(from.singlefoodstorerequest());
    }
    if (from._has_bit(1)) {
      mutable_compositefoodstorerequest()->::CompositeFoodStoreRequest::MergeFrom(from.compositefoodstorerequest());
    }
    if (from._has_bit(2)) {
      mutable_templatestorerequest()->::TemplateStoreRequest::MergeFrom(from.templatestorerequest());
    }
    if (from._has_bit(3)) {
      mutable_mealstorerequest()->::MealStoreRequest::MergeFrom(from.mealstorerequest());
    }
    if (from._has_bit(4)) {
      mutable_userstorerequest()->::UserStoreRequest::MergeFrom(from.userstorerequest());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DataStoreRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataStoreRequest::CopyFrom(const DataStoreRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataStoreRequest::IsInitialized() const {
  
  if (has_singlefoodstorerequest()) {
    if (!this->singlefoodstorerequest().IsInitialized()) return false;
  }
  if (has_compositefoodstorerequest()) {
    if (!this->compositefoodstorerequest().IsInitialized()) return false;
  }
  if (has_templatestorerequest()) {
    if (!this->templatestorerequest().IsInitialized()) return false;
  }
  if (has_mealstorerequest()) {
    if (!this->mealstorerequest().IsInitialized()) return false;
  }
  if (has_userstorerequest()) {
    if (!this->userstorerequest().IsInitialized()) return false;
  }
  return true;
}

void DataStoreRequest::Swap(DataStoreRequest* other) {
  if (other != this) {
    std::swap(singlefoodstorerequest_, other->singlefoodstorerequest_);
    std::swap(compositefoodstorerequest_, other->compositefoodstorerequest_);
    std::swap(templatestorerequest_, other->templatestorerequest_);
    std::swap(mealstorerequest_, other->mealstorerequest_);
    std::swap(userstorerequest_, other->userstorerequest_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DataStoreRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DataStoreRequest_descriptor_;
  metadata.reflection = DataStoreRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DataStoreResponse::kSingleFoodStoreResponseFieldNumber;
const int DataStoreResponse::kCompositeFoodStoreResponseFieldNumber;
const int DataStoreResponse::kTemplateStoreResponseFieldNumber;
const int DataStoreResponse::kMealStoreResponseFieldNumber;
const int DataStoreResponse::kUserStoreResponseFieldNumber;
const int DataStoreResponse::kErrorFieldNumber;
#endif  // !_MSC_VER

DataStoreResponse::DataStoreResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DataStoreResponse::InitAsDefaultInstance() {
  singlefoodstoreresponse_ = const_cast< ::SingleFoodStoreResponse*>(&::SingleFoodStoreResponse::default_instance());
  compositefoodstoreresponse_ = const_cast< ::CompositeFoodStoreResponse*>(&::CompositeFoodStoreResponse::default_instance());
  templatestoreresponse_ = const_cast< ::TemplateStoreResponse*>(&::TemplateStoreResponse::default_instance());
  mealstoreresponse_ = const_cast< ::MealStoreResponse*>(&::MealStoreResponse::default_instance());
  userstoreresponse_ = const_cast< ::UserStoreRequest*>(&::UserStoreRequest::default_instance());
  error_ = const_cast< ::Error*>(&::Error::default_instance());
}

DataStoreResponse::DataStoreResponse(const DataStoreResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DataStoreResponse::SharedCtor() {
  _cached_size_ = 0;
  singlefoodstoreresponse_ = NULL;
  compositefoodstoreresponse_ = NULL;
  templatestoreresponse_ = NULL;
  mealstoreresponse_ = NULL;
  userstoreresponse_ = NULL;
  error_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DataStoreResponse::~DataStoreResponse() {
  SharedDtor();
}

void DataStoreResponse::SharedDtor() {
  if (this != default_instance_) {
    delete singlefoodstoreresponse_;
    delete compositefoodstoreresponse_;
    delete templatestoreresponse_;
    delete mealstoreresponse_;
    delete userstoreresponse_;
    delete error_;
  }
}

void DataStoreResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataStoreResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DataStoreResponse_descriptor_;
}

const DataStoreResponse& DataStoreResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_libnutrition_2fproto_2fservice_2fdata_5fmessages_2eproto();  return *default_instance_;
}

DataStoreResponse* DataStoreResponse::default_instance_ = NULL;

DataStoreResponse* DataStoreResponse::New() const {
  return new DataStoreResponse;
}

void DataStoreResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (singlefoodstoreresponse_ != NULL) singlefoodstoreresponse_->::SingleFoodStoreResponse::Clear();
    }
    if (_has_bit(1)) {
      if (compositefoodstoreresponse_ != NULL) compositefoodstoreresponse_->::CompositeFoodStoreResponse::Clear();
    }
    if (_has_bit(2)) {
      if (templatestoreresponse_ != NULL) templatestoreresponse_->::TemplateStoreResponse::Clear();
    }
    if (_has_bit(3)) {
      if (mealstoreresponse_ != NULL) mealstoreresponse_->::MealStoreResponse::Clear();
    }
    if (_has_bit(4)) {
      if (userstoreresponse_ != NULL) userstoreresponse_->::UserStoreRequest::Clear();
    }
    if (_has_bit(5)) {
      if (error_ != NULL) error_->::Error::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DataStoreResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SingleFoodStoreResponse singleFoodStoreResponse = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_singlefoodstoreresponse()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_compositeFoodStoreResponse;
        break;
      }
      
      // optional .CompositeFoodStoreResponse compositeFoodStoreResponse = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_compositeFoodStoreResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_compositefoodstoreresponse()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_templateStoreResponse;
        break;
      }
      
      // optional .TemplateStoreResponse templateStoreResponse = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_templateStoreResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_templatestoreresponse()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_mealStoreResponse;
        break;
      }
      
      // optional .MealStoreResponse mealStoreResponse = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mealStoreResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mealstoreresponse()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_userStoreResponse;
        break;
      }
      
      // optional .UserStoreRequest userStoreResponse = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_userStoreResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userstoreresponse()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(802)) goto parse_error;
        break;
      }
      
      // optional .Error error = 100;
      case 100: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DataStoreResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .SingleFoodStoreResponse singleFoodStoreResponse = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->singlefoodstoreresponse(), output);
  }
  
  // optional .CompositeFoodStoreResponse compositeFoodStoreResponse = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->compositefoodstoreresponse(), output);
  }
  
  // optional .TemplateStoreResponse templateStoreResponse = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->templatestoreresponse(), output);
  }
  
  // optional .MealStoreResponse mealStoreResponse = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->mealstoreresponse(), output);
  }
  
  // optional .UserStoreRequest userStoreResponse = 9;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->userstoreresponse(), output);
  }
  
  // optional .Error error = 100;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100, this->error(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DataStoreResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .SingleFoodStoreResponse singleFoodStoreResponse = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->singlefoodstoreresponse(), target);
  }
  
  // optional .CompositeFoodStoreResponse compositeFoodStoreResponse = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->compositefoodstoreresponse(), target);
  }
  
  // optional .TemplateStoreResponse templateStoreResponse = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->templatestoreresponse(), target);
  }
  
  // optional .MealStoreResponse mealStoreResponse = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->mealstoreresponse(), target);
  }
  
  // optional .UserStoreRequest userStoreResponse = 9;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->userstoreresponse(), target);
  }
  
  // optional .Error error = 100;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        100, this->error(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DataStoreResponse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SingleFoodStoreResponse singleFoodStoreResponse = 1;
    if (has_singlefoodstoreresponse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->singlefoodstoreresponse());
    }
    
    // optional .CompositeFoodStoreResponse compositeFoodStoreResponse = 2;
    if (has_compositefoodstoreresponse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->compositefoodstoreresponse());
    }
    
    // optional .TemplateStoreResponse templateStoreResponse = 3;
    if (has_templatestoreresponse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->templatestoreresponse());
    }
    
    // optional .MealStoreResponse mealStoreResponse = 4;
    if (has_mealstoreresponse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->mealstoreresponse());
    }
    
    // optional .UserStoreRequest userStoreResponse = 9;
    if (has_userstoreresponse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->userstoreresponse());
    }
    
    // optional .Error error = 100;
    if (has_error()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->error());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataStoreResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DataStoreResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DataStoreResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DataStoreResponse::MergeFrom(const DataStoreResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_singlefoodstoreresponse()->::SingleFoodStoreResponse::MergeFrom(from.singlefoodstoreresponse());
    }
    if (from._has_bit(1)) {
      mutable_compositefoodstoreresponse()->::CompositeFoodStoreResponse::MergeFrom(from.compositefoodstoreresponse());
    }
    if (from._has_bit(2)) {
      mutable_templatestoreresponse()->::TemplateStoreResponse::MergeFrom(from.templatestoreresponse());
    }
    if (from._has_bit(3)) {
      mutable_mealstoreresponse()->::MealStoreResponse::MergeFrom(from.mealstoreresponse());
    }
    if (from._has_bit(4)) {
      mutable_userstoreresponse()->::UserStoreRequest::MergeFrom(from.userstoreresponse());
    }
    if (from._has_bit(5)) {
      mutable_error()->::Error::MergeFrom(from.error());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DataStoreResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataStoreResponse::CopyFrom(const DataStoreResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataStoreResponse::IsInitialized() const {
  
  if (has_singlefoodstoreresponse()) {
    if (!this->singlefoodstoreresponse().IsInitialized()) return false;
  }
  if (has_compositefoodstoreresponse()) {
    if (!this->compositefoodstoreresponse().IsInitialized()) return false;
  }
  if (has_templatestoreresponse()) {
    if (!this->templatestoreresponse().IsInitialized()) return false;
  }
  if (has_mealstoreresponse()) {
    if (!this->mealstoreresponse().IsInitialized()) return false;
  }
  if (has_userstoreresponse()) {
    if (!this->userstoreresponse().IsInitialized()) return false;
  }
  if (has_error()) {
    if (!this->error().IsInitialized()) return false;
  }
  return true;
}

void DataStoreResponse::Swap(DataStoreResponse* other) {
  if (other != this) {
    std::swap(singlefoodstoreresponse_, other->singlefoodstoreresponse_);
    std::swap(compositefoodstoreresponse_, other->compositefoodstoreresponse_);
    std::swap(templatestoreresponse_, other->templatestoreresponse_);
    std::swap(mealstoreresponse_, other->mealstoreresponse_);
    std::swap(userstoreresponse_, other->userstoreresponse_);
    std::swap(error_, other->error_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DataStoreResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DataStoreResponse_descriptor_;
  metadata.reflection = DataStoreResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DataDeleteRequest::kSingleFoodDeleteRequestFieldNumber;
const int DataDeleteRequest::kCompositeFoodDeleteRequestFieldNumber;
const int DataDeleteRequest::kTemplateDeleteRequestFieldNumber;
const int DataDeleteRequest::kMealDeleteRequestFieldNumber;
#endif  // !_MSC_VER

DataDeleteRequest::DataDeleteRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DataDeleteRequest::InitAsDefaultInstance() {
  singlefooddeleterequest_ = const_cast< ::SingleFoodDeleteRequest*>(&::SingleFoodDeleteRequest::default_instance());
  compositefooddeleterequest_ = const_cast< ::CompositeFoodDeleteRequest*>(&::CompositeFoodDeleteRequest::default_instance());
  templatedeleterequest_ = const_cast< ::TemplateDeleteRequest*>(&::TemplateDeleteRequest::default_instance());
  mealdeleterequest_ = const_cast< ::MealDeleteRequest*>(&::MealDeleteRequest::default_instance());
}

DataDeleteRequest::DataDeleteRequest(const DataDeleteRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DataDeleteRequest::SharedCtor() {
  _cached_size_ = 0;
  singlefooddeleterequest_ = NULL;
  compositefooddeleterequest_ = NULL;
  templatedeleterequest_ = NULL;
  mealdeleterequest_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DataDeleteRequest::~DataDeleteRequest() {
  SharedDtor();
}

void DataDeleteRequest::SharedDtor() {
  if (this != default_instance_) {
    delete singlefooddeleterequest_;
    delete compositefooddeleterequest_;
    delete templatedeleterequest_;
    delete mealdeleterequest_;
  }
}

void DataDeleteRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataDeleteRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DataDeleteRequest_descriptor_;
}

const DataDeleteRequest& DataDeleteRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_libnutrition_2fproto_2fservice_2fdata_5fmessages_2eproto();  return *default_instance_;
}

DataDeleteRequest* DataDeleteRequest::default_instance_ = NULL;

DataDeleteRequest* DataDeleteRequest::New() const {
  return new DataDeleteRequest;
}

void DataDeleteRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (singlefooddeleterequest_ != NULL) singlefooddeleterequest_->::SingleFoodDeleteRequest::Clear();
    }
    if (_has_bit(1)) {
      if (compositefooddeleterequest_ != NULL) compositefooddeleterequest_->::CompositeFoodDeleteRequest::Clear();
    }
    if (_has_bit(2)) {
      if (templatedeleterequest_ != NULL) templatedeleterequest_->::TemplateDeleteRequest::Clear();
    }
    if (_has_bit(3)) {
      if (mealdeleterequest_ != NULL) mealdeleterequest_->::MealDeleteRequest::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DataDeleteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SingleFoodDeleteRequest singleFoodDeleteRequest = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_singlefooddeleterequest()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_compositeFoodDeleteRequest;
        break;
      }
      
      // optional .CompositeFoodDeleteRequest compositeFoodDeleteRequest = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_compositeFoodDeleteRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_compositefooddeleterequest()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_templateDeleteRequest;
        break;
      }
      
      // optional .TemplateDeleteRequest templateDeleteRequest = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_templateDeleteRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_templatedeleterequest()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_mealDeleteRequest;
        break;
      }
      
      // optional .MealDeleteRequest mealDeleteRequest = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mealDeleteRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mealdeleterequest()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DataDeleteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .SingleFoodDeleteRequest singleFoodDeleteRequest = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->singlefooddeleterequest(), output);
  }
  
  // optional .CompositeFoodDeleteRequest compositeFoodDeleteRequest = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->compositefooddeleterequest(), output);
  }
  
  // optional .TemplateDeleteRequest templateDeleteRequest = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->templatedeleterequest(), output);
  }
  
  // optional .MealDeleteRequest mealDeleteRequest = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->mealdeleterequest(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DataDeleteRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .SingleFoodDeleteRequest singleFoodDeleteRequest = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->singlefooddeleterequest(), target);
  }
  
  // optional .CompositeFoodDeleteRequest compositeFoodDeleteRequest = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->compositefooddeleterequest(), target);
  }
  
  // optional .TemplateDeleteRequest templateDeleteRequest = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->templatedeleterequest(), target);
  }
  
  // optional .MealDeleteRequest mealDeleteRequest = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->mealdeleterequest(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DataDeleteRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SingleFoodDeleteRequest singleFoodDeleteRequest = 1;
    if (has_singlefooddeleterequest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->singlefooddeleterequest());
    }
    
    // optional .CompositeFoodDeleteRequest compositeFoodDeleteRequest = 2;
    if (has_compositefooddeleterequest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->compositefooddeleterequest());
    }
    
    // optional .TemplateDeleteRequest templateDeleteRequest = 3;
    if (has_templatedeleterequest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->templatedeleterequest());
    }
    
    // optional .MealDeleteRequest mealDeleteRequest = 4;
    if (has_mealdeleterequest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->mealdeleterequest());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataDeleteRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DataDeleteRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DataDeleteRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DataDeleteRequest::MergeFrom(const DataDeleteRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_singlefooddeleterequest()->::SingleFoodDeleteRequest::MergeFrom(from.singlefooddeleterequest());
    }
    if (from._has_bit(1)) {
      mutable_compositefooddeleterequest()->::CompositeFoodDeleteRequest::MergeFrom(from.compositefooddeleterequest());
    }
    if (from._has_bit(2)) {
      mutable_templatedeleterequest()->::TemplateDeleteRequest::MergeFrom(from.templatedeleterequest());
    }
    if (from._has_bit(3)) {
      mutable_mealdeleterequest()->::MealDeleteRequest::MergeFrom(from.mealdeleterequest());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DataDeleteRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataDeleteRequest::CopyFrom(const DataDeleteRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataDeleteRequest::IsInitialized() const {
  
  return true;
}

void DataDeleteRequest::Swap(DataDeleteRequest* other) {
  if (other != this) {
    std::swap(singlefooddeleterequest_, other->singlefooddeleterequest_);
    std::swap(compositefooddeleterequest_, other->compositefooddeleterequest_);
    std::swap(templatedeleterequest_, other->templatedeleterequest_);
    std::swap(mealdeleterequest_, other->mealdeleterequest_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DataDeleteRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DataDeleteRequest_descriptor_;
  metadata.reflection = DataDeleteRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DataDeleteResponse::kSingleFoodDeleteResponseFieldNumber;
const int DataDeleteResponse::kCompositeFoodDeleteResponseFieldNumber;
const int DataDeleteResponse::kTemplateDeleteResponseFieldNumber;
const int DataDeleteResponse::kMealDeleteResponseFieldNumber;
const int DataDeleteResponse::kErrorFieldNumber;
#endif  // !_MSC_VER

DataDeleteResponse::DataDeleteResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DataDeleteResponse::InitAsDefaultInstance() {
  singlefooddeleteresponse_ = const_cast< ::SingleFoodDeleteResponse*>(&::SingleFoodDeleteResponse::default_instance());
  compositefooddeleteresponse_ = const_cast< ::CompositeFoodDeleteResponse*>(&::CompositeFoodDeleteResponse::default_instance());
  templatedeleteresponse_ = const_cast< ::TemplateDeleteResponse*>(&::TemplateDeleteResponse::default_instance());
  mealdeleteresponse_ = const_cast< ::MealDeleteResponse*>(&::MealDeleteResponse::default_instance());
  error_ = const_cast< ::Error*>(&::Error::default_instance());
}

DataDeleteResponse::DataDeleteResponse(const DataDeleteResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DataDeleteResponse::SharedCtor() {
  _cached_size_ = 0;
  singlefooddeleteresponse_ = NULL;
  compositefooddeleteresponse_ = NULL;
  templatedeleteresponse_ = NULL;
  mealdeleteresponse_ = NULL;
  error_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DataDeleteResponse::~DataDeleteResponse() {
  SharedDtor();
}

void DataDeleteResponse::SharedDtor() {
  if (this != default_instance_) {
    delete singlefooddeleteresponse_;
    delete compositefooddeleteresponse_;
    delete templatedeleteresponse_;
    delete mealdeleteresponse_;
    delete error_;
  }
}

void DataDeleteResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataDeleteResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DataDeleteResponse_descriptor_;
}

const DataDeleteResponse& DataDeleteResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_libnutrition_2fproto_2fservice_2fdata_5fmessages_2eproto();  return *default_instance_;
}

DataDeleteResponse* DataDeleteResponse::default_instance_ = NULL;

DataDeleteResponse* DataDeleteResponse::New() const {
  return new DataDeleteResponse;
}

void DataDeleteResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (singlefooddeleteresponse_ != NULL) singlefooddeleteresponse_->::SingleFoodDeleteResponse::Clear();
    }
    if (_has_bit(1)) {
      if (compositefooddeleteresponse_ != NULL) compositefooddeleteresponse_->::CompositeFoodDeleteResponse::Clear();
    }
    if (_has_bit(2)) {
      if (templatedeleteresponse_ != NULL) templatedeleteresponse_->::TemplateDeleteResponse::Clear();
    }
    if (_has_bit(3)) {
      if (mealdeleteresponse_ != NULL) mealdeleteresponse_->::MealDeleteResponse::Clear();
    }
    if (_has_bit(4)) {
      if (error_ != NULL) error_->::Error::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DataDeleteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SingleFoodDeleteResponse singleFoodDeleteResponse = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_singlefooddeleteresponse()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_compositeFoodDeleteResponse;
        break;
      }
      
      // optional .CompositeFoodDeleteResponse compositeFoodDeleteResponse = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_compositeFoodDeleteResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_compositefooddeleteresponse()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_templateDeleteResponse;
        break;
      }
      
      // optional .TemplateDeleteResponse templateDeleteResponse = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_templateDeleteResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_templatedeleteresponse()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_mealDeleteResponse;
        break;
      }
      
      // optional .MealDeleteResponse mealDeleteResponse = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mealDeleteResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mealdeleteresponse()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(802)) goto parse_error;
        break;
      }
      
      // optional .Error error = 100;
      case 100: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DataDeleteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .SingleFoodDeleteResponse singleFoodDeleteResponse = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->singlefooddeleteresponse(), output);
  }
  
  // optional .CompositeFoodDeleteResponse compositeFoodDeleteResponse = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->compositefooddeleteresponse(), output);
  }
  
  // optional .TemplateDeleteResponse templateDeleteResponse = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->templatedeleteresponse(), output);
  }
  
  // optional .MealDeleteResponse mealDeleteResponse = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->mealdeleteresponse(), output);
  }
  
  // optional .Error error = 100;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100, this->error(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DataDeleteResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .SingleFoodDeleteResponse singleFoodDeleteResponse = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->singlefooddeleteresponse(), target);
  }
  
  // optional .CompositeFoodDeleteResponse compositeFoodDeleteResponse = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->compositefooddeleteresponse(), target);
  }
  
  // optional .TemplateDeleteResponse templateDeleteResponse = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->templatedeleteresponse(), target);
  }
  
  // optional .MealDeleteResponse mealDeleteResponse = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->mealdeleteresponse(), target);
  }
  
  // optional .Error error = 100;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        100, this->error(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DataDeleteResponse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SingleFoodDeleteResponse singleFoodDeleteResponse = 1;
    if (has_singlefooddeleteresponse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->singlefooddeleteresponse());
    }
    
    // optional .CompositeFoodDeleteResponse compositeFoodDeleteResponse = 2;
    if (has_compositefooddeleteresponse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->compositefooddeleteresponse());
    }
    
    // optional .TemplateDeleteResponse templateDeleteResponse = 3;
    if (has_templatedeleteresponse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->templatedeleteresponse());
    }
    
    // optional .MealDeleteResponse mealDeleteResponse = 4;
    if (has_mealdeleteresponse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->mealdeleteresponse());
    }
    
    // optional .Error error = 100;
    if (has_error()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->error());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataDeleteResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DataDeleteResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DataDeleteResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DataDeleteResponse::MergeFrom(const DataDeleteResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_singlefooddeleteresponse()->::SingleFoodDeleteResponse::MergeFrom(from.singlefooddeleteresponse());
    }
    if (from._has_bit(1)) {
      mutable_compositefooddeleteresponse()->::CompositeFoodDeleteResponse::MergeFrom(from.compositefooddeleteresponse());
    }
    if (from._has_bit(2)) {
      mutable_templatedeleteresponse()->::TemplateDeleteResponse::MergeFrom(from.templatedeleteresponse());
    }
    if (from._has_bit(3)) {
      mutable_mealdeleteresponse()->::MealDeleteResponse::MergeFrom(from.mealdeleteresponse());
    }
    if (from._has_bit(4)) {
      mutable_error()->::Error::MergeFrom(from.error());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DataDeleteResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataDeleteResponse::CopyFrom(const DataDeleteResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataDeleteResponse::IsInitialized() const {
  
  if (has_singlefooddeleteresponse()) {
    if (!this->singlefooddeleteresponse().IsInitialized()) return false;
  }
  if (has_compositefooddeleteresponse()) {
    if (!this->compositefooddeleteresponse().IsInitialized()) return false;
  }
  if (has_templatedeleteresponse()) {
    if (!this->templatedeleteresponse().IsInitialized()) return false;
  }
  if (has_mealdeleteresponse()) {
    if (!this->mealdeleteresponse().IsInitialized()) return false;
  }
  if (has_error()) {
    if (!this->error().IsInitialized()) return false;
  }
  return true;
}

void DataDeleteResponse::Swap(DataDeleteResponse* other) {
  if (other != this) {
    std::swap(singlefooddeleteresponse_, other->singlefooddeleteresponse_);
    std::swap(compositefooddeleteresponse_, other->compositefooddeleteresponse_);
    std::swap(templatedeleteresponse_, other->templatedeleteresponse_);
    std::swap(mealdeleteresponse_, other->mealdeleteresponse_);
    std::swap(error_, other->error_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DataDeleteResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DataDeleteResponse_descriptor_;
  metadata.reflection = DataDeleteResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
