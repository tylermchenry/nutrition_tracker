// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "libnutrition/proto/service/user_messages.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* UserLoadRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserLoadRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserLoadResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserLoadResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserStoreRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserStoreRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserStoreResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserStoreResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_libnutrition_2fproto_2fservice_2fuser_5fmessages_2eproto() {
  protobuf_AddDesc_libnutrition_2fproto_2fservice_2fuser_5fmessages_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "libnutrition/proto/service/user_messages.proto");
  GOOGLE_CHECK(file != NULL);
  UserLoadRequest_descriptor_ = file->message_type(0);
  static const int UserLoadRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLoadRequest, omit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLoadRequest, all_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLoadRequest, requestedids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLoadRequest, requestedusernames_),
  };
  UserLoadRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UserLoadRequest_descriptor_,
      UserLoadRequest::default_instance_,
      UserLoadRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLoadRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLoadRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UserLoadRequest));
  UserLoadResponse_descriptor_ = file->message_type(1);
  static const int UserLoadResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLoadResponse, users_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLoadResponse, error_),
  };
  UserLoadResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UserLoadResponse_descriptor_,
      UserLoadResponse::default_instance_,
      UserLoadResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLoadResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLoadResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UserLoadResponse));
  UserStoreRequest_descriptor_ = file->message_type(2);
  static const int UserStoreRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserStoreRequest, users_),
  };
  UserStoreRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UserStoreRequest_descriptor_,
      UserStoreRequest::default_instance_,
      UserStoreRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserStoreRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserStoreRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UserStoreRequest));
  UserStoreResponse_descriptor_ = file->message_type(3);
  static const int UserStoreResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserStoreResponse, storedids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserStoreResponse, error_),
  };
  UserStoreResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UserStoreResponse_descriptor_,
      UserStoreResponse::default_instance_,
      UserStoreResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserStoreResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserStoreResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UserStoreResponse));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_libnutrition_2fproto_2fservice_2fuser_5fmessages_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UserLoadRequest_descriptor_, &UserLoadRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UserLoadResponse_descriptor_, &UserLoadResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UserStoreRequest_descriptor_, &UserStoreRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UserStoreResponse_descriptor_, &UserStoreResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_libnutrition_2fproto_2fservice_2fuser_5fmessages_2eproto() {
  delete UserLoadRequest::default_instance_;
  delete UserLoadRequest_reflection_;
  delete UserLoadResponse::default_instance_;
  delete UserLoadResponse_reflection_;
  delete UserStoreRequest::default_instance_;
  delete UserStoreRequest_reflection_;
  delete UserStoreResponse::default_instance_;
  delete UserStoreResponse_reflection_;
}

void protobuf_AddDesc_libnutrition_2fproto_2fservice_2fuser_5fmessages_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_libnutrition_2fproto_2fdata_2fuser_2eproto();
  ::protobuf_AddDesc_libnutrition_2fproto_2fservice_2ferror_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n.libnutrition/proto/service/user_messag"
    "es.proto\032\"libnutrition/proto/data/user.p"
    "roto\032&libnutrition/proto/service/error.p"
    "roto\"l\n\017UserLoadRequest\022\023\n\004omit\030\001 \001(\010:\005f"
    "alse\022\022\n\003all\030\002 \001(\010:\005false\022\024\n\014requestedIds"
    "\030\003 \003(\005\022\032\n\022requestedUsernames\030\004 \003(\t\"C\n\020Us"
    "erLoadResponse\022\030\n\005users\030\001 \003(\0132\t.UserData"
    "\022\025\n\005error\030d \001(\0132\006.Error\",\n\020UserStoreRequ"
    "est\022\030\n\005users\030\001 \003(\0132\t.UserData\"=\n\021UserSto"
    "reResponse\022\021\n\tstoredIds\030\001 \003(\005\022\025\n\005error\030d"
    " \001(\0132\006.Error", 412);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "libnutrition/proto/service/user_messages.proto", &protobuf_RegisterTypes);
  UserLoadRequest::default_instance_ = new UserLoadRequest();
  UserLoadResponse::default_instance_ = new UserLoadResponse();
  UserStoreRequest::default_instance_ = new UserStoreRequest();
  UserStoreResponse::default_instance_ = new UserStoreResponse();
  UserLoadRequest::default_instance_->InitAsDefaultInstance();
  UserLoadResponse::default_instance_->InitAsDefaultInstance();
  UserStoreRequest::default_instance_->InitAsDefaultInstance();
  UserStoreResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_libnutrition_2fproto_2fservice_2fuser_5fmessages_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_libnutrition_2fproto_2fservice_2fuser_5fmessages_2eproto {
  StaticDescriptorInitializer_libnutrition_2fproto_2fservice_2fuser_5fmessages_2eproto() {
    protobuf_AddDesc_libnutrition_2fproto_2fservice_2fuser_5fmessages_2eproto();
  }
} static_descriptor_initializer_libnutrition_2fproto_2fservice_2fuser_5fmessages_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int UserLoadRequest::kOmitFieldNumber;
const int UserLoadRequest::kAllFieldNumber;
const int UserLoadRequest::kRequestedIdsFieldNumber;
const int UserLoadRequest::kRequestedUsernamesFieldNumber;
#endif  // !_MSC_VER

UserLoadRequest::UserLoadRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UserLoadRequest::InitAsDefaultInstance() {
}

UserLoadRequest::UserLoadRequest(const UserLoadRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UserLoadRequest::SharedCtor() {
  _cached_size_ = 0;
  omit_ = false;
  all_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserLoadRequest::~UserLoadRequest() {
  SharedDtor();
}

void UserLoadRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UserLoadRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserLoadRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserLoadRequest_descriptor_;
}

const UserLoadRequest& UserLoadRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_libnutrition_2fproto_2fservice_2fuser_5fmessages_2eproto();  return *default_instance_;
}

UserLoadRequest* UserLoadRequest::default_instance_ = NULL;

UserLoadRequest* UserLoadRequest::New() const {
  return new UserLoadRequest;
}

void UserLoadRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    omit_ = false;
    all_ = false;
  }
  requestedids_.Clear();
  requestedusernames_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UserLoadRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool omit = 1 [default = false];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &omit_)));
          _set_bit(0);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_all;
        break;
      }
      
      // optional bool all = 2 [default = false];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_all:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &all_)));
          _set_bit(1);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_requestedIds;
        break;
      }
      
      // repeated int32 requestedIds = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_requestedIds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_requestedids())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_requestedids())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_requestedIds;
        if (input->ExpectTag(34)) goto parse_requestedUsernames;
        break;
      }
      
      // repeated string requestedUsernames = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_requestedUsernames:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_requestedusernames()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->requestedusernames(0).data(), this->requestedusernames(0).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_requestedUsernames;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UserLoadRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional bool omit = 1 [default = false];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->omit(), output);
  }
  
  // optional bool all = 2 [default = false];
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->all(), output);
  }
  
  // repeated int32 requestedIds = 3;
  for (int i = 0; i < this->requestedids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->requestedids(i), output);
  }
  
  // repeated string requestedUsernames = 4;
  for (int i = 0; i < this->requestedusernames_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->requestedusernames(i).data(), this->requestedusernames(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->requestedusernames(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UserLoadRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional bool omit = 1 [default = false];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->omit(), target);
  }
  
  // optional bool all = 2 [default = false];
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->all(), target);
  }
  
  // repeated int32 requestedIds = 3;
  for (int i = 0; i < this->requestedids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->requestedids(i), target);
  }
  
  // repeated string requestedUsernames = 4;
  for (int i = 0; i < this->requestedusernames_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->requestedusernames(i).data(), this->requestedusernames(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->requestedusernames(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UserLoadRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool omit = 1 [default = false];
    if (has_omit()) {
      total_size += 1 + 1;
    }
    
    // optional bool all = 2 [default = false];
    if (has_all()) {
      total_size += 1 + 1;
    }
    
  }
  // repeated int32 requestedIds = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->requestedids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->requestedids(i));
    }
    total_size += 1 * this->requestedids_size() + data_size;
  }
  
  // repeated string requestedUsernames = 4;
  total_size += 1 * this->requestedusernames_size();
  for (int i = 0; i < this->requestedusernames_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->requestedusernames(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserLoadRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UserLoadRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UserLoadRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UserLoadRequest::MergeFrom(const UserLoadRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  requestedids_.MergeFrom(from.requestedids_);
  requestedusernames_.MergeFrom(from.requestedusernames_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_omit(from.omit());
    }
    if (from._has_bit(1)) {
      set_all(from.all());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UserLoadRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserLoadRequest::CopyFrom(const UserLoadRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserLoadRequest::IsInitialized() const {
  
  return true;
}

void UserLoadRequest::Swap(UserLoadRequest* other) {
  if (other != this) {
    std::swap(omit_, other->omit_);
    std::swap(all_, other->all_);
    requestedids_.Swap(&other->requestedids_);
    requestedusernames_.Swap(&other->requestedusernames_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UserLoadRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserLoadRequest_descriptor_;
  metadata.reflection = UserLoadRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UserLoadResponse::kUsersFieldNumber;
const int UserLoadResponse::kErrorFieldNumber;
#endif  // !_MSC_VER

UserLoadResponse::UserLoadResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UserLoadResponse::InitAsDefaultInstance() {
  error_ = const_cast< ::Error*>(&::Error::default_instance());
}

UserLoadResponse::UserLoadResponse(const UserLoadResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UserLoadResponse::SharedCtor() {
  _cached_size_ = 0;
  error_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserLoadResponse::~UserLoadResponse() {
  SharedDtor();
}

void UserLoadResponse::SharedDtor() {
  if (this != default_instance_) {
    delete error_;
  }
}

void UserLoadResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserLoadResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserLoadResponse_descriptor_;
}

const UserLoadResponse& UserLoadResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_libnutrition_2fproto_2fservice_2fuser_5fmessages_2eproto();  return *default_instance_;
}

UserLoadResponse* UserLoadResponse::default_instance_ = NULL;

UserLoadResponse* UserLoadResponse::New() const {
  return new UserLoadResponse;
}

void UserLoadResponse::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (_has_bit(1)) {
      if (error_ != NULL) error_->::Error::Clear();
    }
  }
  users_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UserLoadResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .UserData users = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_users:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_users()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_users;
        if (input->ExpectTag(802)) goto parse_error;
        break;
      }
      
      // optional .Error error = 100;
      case 100: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UserLoadResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .UserData users = 1;
  for (int i = 0; i < this->users_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->users(i), output);
  }
  
  // optional .Error error = 100;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100, this->error(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UserLoadResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .UserData users = 1;
  for (int i = 0; i < this->users_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->users(i), target);
  }
  
  // optional .Error error = 100;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        100, this->error(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UserLoadResponse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .Error error = 100;
    if (has_error()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->error());
    }
    
  }
  // repeated .UserData users = 1;
  total_size += 1 * this->users_size();
  for (int i = 0; i < this->users_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->users(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserLoadResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UserLoadResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UserLoadResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UserLoadResponse::MergeFrom(const UserLoadResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  users_.MergeFrom(from.users_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from._has_bit(1)) {
      mutable_error()->::Error::MergeFrom(from.error());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UserLoadResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserLoadResponse::CopyFrom(const UserLoadResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserLoadResponse::IsInitialized() const {
  
  return true;
}

void UserLoadResponse::Swap(UserLoadResponse* other) {
  if (other != this) {
    users_.Swap(&other->users_);
    std::swap(error_, other->error_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UserLoadResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserLoadResponse_descriptor_;
  metadata.reflection = UserLoadResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UserStoreRequest::kUsersFieldNumber;
#endif  // !_MSC_VER

UserStoreRequest::UserStoreRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UserStoreRequest::InitAsDefaultInstance() {
}

UserStoreRequest::UserStoreRequest(const UserStoreRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UserStoreRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserStoreRequest::~UserStoreRequest() {
  SharedDtor();
}

void UserStoreRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UserStoreRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserStoreRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserStoreRequest_descriptor_;
}

const UserStoreRequest& UserStoreRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_libnutrition_2fproto_2fservice_2fuser_5fmessages_2eproto();  return *default_instance_;
}

UserStoreRequest* UserStoreRequest::default_instance_ = NULL;

UserStoreRequest* UserStoreRequest::New() const {
  return new UserStoreRequest;
}

void UserStoreRequest::Clear() {
  users_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UserStoreRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .UserData users = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_users:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_users()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_users;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UserStoreRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .UserData users = 1;
  for (int i = 0; i < this->users_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->users(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UserStoreRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .UserData users = 1;
  for (int i = 0; i < this->users_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->users(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UserStoreRequest::ByteSize() const {
  int total_size = 0;
  
  // repeated .UserData users = 1;
  total_size += 1 * this->users_size();
  for (int i = 0; i < this->users_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->users(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserStoreRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UserStoreRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UserStoreRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UserStoreRequest::MergeFrom(const UserStoreRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  users_.MergeFrom(from.users_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UserStoreRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserStoreRequest::CopyFrom(const UserStoreRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserStoreRequest::IsInitialized() const {
  
  return true;
}

void UserStoreRequest::Swap(UserStoreRequest* other) {
  if (other != this) {
    users_.Swap(&other->users_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UserStoreRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserStoreRequest_descriptor_;
  metadata.reflection = UserStoreRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UserStoreResponse::kStoredIdsFieldNumber;
const int UserStoreResponse::kErrorFieldNumber;
#endif  // !_MSC_VER

UserStoreResponse::UserStoreResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UserStoreResponse::InitAsDefaultInstance() {
  error_ = const_cast< ::Error*>(&::Error::default_instance());
}

UserStoreResponse::UserStoreResponse(const UserStoreResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UserStoreResponse::SharedCtor() {
  _cached_size_ = 0;
  error_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserStoreResponse::~UserStoreResponse() {
  SharedDtor();
}

void UserStoreResponse::SharedDtor() {
  if (this != default_instance_) {
    delete error_;
  }
}

void UserStoreResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserStoreResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserStoreResponse_descriptor_;
}

const UserStoreResponse& UserStoreResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_libnutrition_2fproto_2fservice_2fuser_5fmessages_2eproto();  return *default_instance_;
}

UserStoreResponse* UserStoreResponse::default_instance_ = NULL;

UserStoreResponse* UserStoreResponse::New() const {
  return new UserStoreResponse;
}

void UserStoreResponse::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (_has_bit(1)) {
      if (error_ != NULL) error_->::Error::Clear();
    }
  }
  storedids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UserStoreResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 storedIds = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_storedIds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_storedids())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_storedids())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_storedIds;
        if (input->ExpectTag(802)) goto parse_error;
        break;
      }
      
      // optional .Error error = 100;
      case 100: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UserStoreResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 storedIds = 1;
  for (int i = 0; i < this->storedids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->storedids(i), output);
  }
  
  // optional .Error error = 100;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100, this->error(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UserStoreResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 storedIds = 1;
  for (int i = 0; i < this->storedids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->storedids(i), target);
  }
  
  // optional .Error error = 100;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        100, this->error(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UserStoreResponse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .Error error = 100;
    if (has_error()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->error());
    }
    
  }
  // repeated int32 storedIds = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->storedids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->storedids(i));
    }
    total_size += 1 * this->storedids_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserStoreResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UserStoreResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UserStoreResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UserStoreResponse::MergeFrom(const UserStoreResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  storedids_.MergeFrom(from.storedids_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from._has_bit(1)) {
      mutable_error()->::Error::MergeFrom(from.error());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UserStoreResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserStoreResponse::CopyFrom(const UserStoreResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserStoreResponse::IsInitialized() const {
  
  return true;
}

void UserStoreResponse::Swap(UserStoreResponse* other) {
  if (other != this) {
    storedids_.Swap(&other->storedids_);
    std::swap(error_, other->error_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UserStoreResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserStoreResponse_descriptor_;
  metadata.reflection = UserStoreResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
